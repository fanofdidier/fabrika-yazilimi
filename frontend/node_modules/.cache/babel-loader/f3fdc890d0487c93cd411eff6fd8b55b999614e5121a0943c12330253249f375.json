{"ast":null,"code":"// Authentication utility functions\n\n// Token management\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\nexport const setToken = token => {\n  if (token) {\n    localStorage.setItem('token', token);\n  }\n};\nexport const removeToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Set auth token in axios headers\nexport const setAuthToken = token => {\n  if (token) {\n    // Set default auth header for all requests\n    localStorage.setItem('token', token);\n  } else {\n    // Remove auth header\n    localStorage.removeItem('token');\n  }\n};\nexport const removeAuthToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) return false;\n  try {\n    // Check if token is expired\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    return payload.exp > currentTime;\n  } catch (error) {\n    console.error('Token validation error:', error);\n    return false;\n  }\n};\n\n// Get user data from token\nexport const getUserFromToken = () => {\n  const token = getToken();\n  if (!token) return null;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return {\n      id: payload.userId,\n      role: payload.role,\n      exp: payload.exp,\n      iat: payload.iat\n    };\n  } catch (error) {\n    console.error('Token parsing error:', error);\n    return null;\n  }\n};\n\n// Check if token is about to expire (within 5 minutes)\nexport const isTokenExpiringSoon = () => {\n  const token = getToken();\n  if (!token) return false;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    const fiveMinutes = 5 * 60; // 5 minutes in seconds\n\n    return payload.exp - currentTime < fiveMinutes;\n  } catch (error) {\n    console.error('Token expiration check error:', error);\n    return false;\n  }\n};\n\n// Role-based access control\nexport const hasRole = (userRole, requiredRoles) => {\n  if (!userRole || !requiredRoles) return false;\n  if (Array.isArray(requiredRoles)) {\n    return requiredRoles.includes(userRole);\n  }\n  return userRole === requiredRoles;\n};\n\n// Permission-based access control\nexport const hasPermission = (userRole, permission) => {\n  if (!userRole) return false;\n\n  // Admin has all permissions\n  if (userRole === 'admin') return true;\n\n  // Define role-based permissions\n  const rolePermissions = {\n    magaza_personeli: ['orders.create', 'orders.read', 'orders.update', 'orders.delete', 'tasks.read', 'notifications.read', 'profile.update', 'users.read' // Can view other users\n    ],\n    fabrika_iscisi: ['tasks.read', 'tasks.update', 'tasks.complete', 'orders.read', 'orders.update_status', 'notifications.read', 'profile.update']\n  };\n  const userPermissions = rolePermissions[userRole] || [];\n  return userPermissions.includes(permission);\n};\n\n// Get role display name\nexport const getRoleDisplayName = role => {\n  const roleNames = {\n    admin: 'İşletme Sahibi',\n    magaza_personeli: 'Mağaza Personeli',\n    fabrika_iscisi: 'Fabrika İşçisi'\n  };\n  return roleNames[role] || role;\n};\n\n// Get role color for UI\nexport const getRoleColor = role => {\n  const roleColors = {\n    admin: 'bg-purple-100 text-purple-800',\n    magaza_personeli: 'bg-blue-100 text-blue-800',\n    fabrika_iscisi: 'bg-green-100 text-green-800'\n  };\n  return roleColors[role] || 'bg-gray-100 text-gray-800';\n};\n\n// Logout utility\nexport const logout = () => {\n  removeAuthToken();\n  // Clear any other stored user data\n  localStorage.removeItem('user');\n  localStorage.removeItem('preferences');\n\n  // Redirect to login page\n  window.location.href = '/login';\n};\n\n// Format user display name\nexport const formatUserDisplayName = user => {\n  if (!user) return 'Kullanıcı';\n  if (user.name) {\n    return user.name;\n  }\n  if (user.username) {\n    return user.username;\n  }\n  if (user.email) {\n    return user.email.split('@')[0];\n  }\n  return 'Kullanıcı';\n};\n\n// Check if user can access route\nexport const canAccessRoute = (userRole, routePermissions) => {\n  if (!routePermissions) return true; // Public route\n  if (!userRole) return false; // Not authenticated\n\n  // Admin can access all routes\n  if (userRole === 'admin') return true;\n\n  // Check if user role is in allowed roles\n  if (Array.isArray(routePermissions)) {\n    return routePermissions.includes(userRole);\n  }\n  return userRole === routePermissions;\n};\n\n// Validate password strength\nexport const validatePassword = password => {\n  const errors = [];\n  if (!password) {\n    errors.push('Şifre gereklidir');\n    return {\n      isValid: false,\n      errors\n    };\n  }\n  if (password.length < 6) {\n    errors.push('Şifre en az 6 karakter olmalıdır');\n  }\n  if (!/(?=.*[a-z])/.test(password)) {\n    errors.push('Şifre en az bir küçük harf içermelidir');\n  }\n  if (!/(?=.*[A-Z])/.test(password)) {\n    errors.push('Şifre en az bir büyük harf içermelidir');\n  }\n  if (!/(?=.*\\d)/.test(password)) {\n    errors.push('Şifre en az bir rakam içermelidir');\n  }\n  return {\n    isValid: errors.length === 0,\n    errors,\n    strength: getPasswordStrength(password)\n  };\n};\n\n// Get password strength score\nconst getPasswordStrength = password => {\n  let score = 0;\n  if (password.length >= 6) score += 1;\n  if (password.length >= 10) score += 1;\n  if (/(?=.*[a-z])/.test(password)) score += 1;\n  if (/(?=.*[A-Z])/.test(password)) score += 1;\n  if (/(?=.*\\d)/.test(password)) score += 1;\n  if (/(?=.*[^\\w\\s])/.test(password)) score += 1;\n  if (score <= 2) return 'weak';\n  if (score <= 4) return 'medium';\n  return 'strong';\n};\n\n// Generate secure random password\nexport const generateSecurePassword = (length = 12) => {\n  const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';\n  let password = '';\n\n  // Ensure at least one character from each required type\n  password += 'abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random() * 26)];\n  password += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random() * 26)];\n  password += '0123456789'[Math.floor(Math.random() * 10)];\n  password += '!@#$%^&*'[Math.floor(Math.random() * 8)];\n\n  // Fill the rest randomly\n  for (let i = password.length; i < length; i++) {\n    password += charset[Math.floor(Math.random() * charset.length)];\n  }\n\n  // Shuffle the password\n  return password.split('').sort(() => Math.random() - 0.5).join('');\n};\n\n// Session management\nexport const extendSession = () => {\n  const token = getToken();\n  if (token && isAuthenticated()) {\n    // Update last activity timestamp\n    localStorage.setItem('lastActivity', Date.now().toString());\n    return true;\n  }\n  return false;\n};\nexport const checkSessionTimeout = (timeoutMinutes = 30) => {\n  const lastActivity = localStorage.getItem('lastActivity');\n  if (!lastActivity) return false;\n  const now = Date.now();\n  const lastActivityTime = parseInt(lastActivity);\n  const timeoutMs = timeoutMinutes * 60 * 1000;\n  return now - lastActivityTime > timeoutMs;\n};\n\n// Initialize session tracking\nexport const initSessionTracking = (timeoutMinutes = 30) => {\n  // Update activity on user interactions\n  const updateActivity = () => {\n    if (isAuthenticated()) {\n      localStorage.setItem('lastActivity', Date.now().toString());\n    }\n  };\n\n  // Track user activity\n  const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];\n  events.forEach(event => {\n    document.addEventListener(event, updateActivity, {\n      passive: true\n    });\n  });\n\n  // Check session timeout periodically\n  const checkInterval = setInterval(() => {\n    if (checkSessionTimeout(timeoutMinutes)) {\n      clearInterval(checkInterval);\n      logout();\n    }\n  }, 60000); // Check every minute\n\n  // Initial activity timestamp\n  updateActivity();\n  return () => {\n    // Cleanup function\n    events.forEach(event => {\n      document.removeEventListener(event, updateActivity);\n    });\n    clearInterval(checkInterval);\n  };\n};","map":{"version":3,"names":["getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","setAuthToken","removeAuthToken","isAuthenticated","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","console","getUserFromToken","id","userId","role","iat","isTokenExpiringSoon","fiveMinutes","hasRole","userRole","requiredRoles","Array","isArray","includes","hasPermission","permission","rolePermissions","magaza_personeli","fabrika_iscisi","userPermissions","getRoleDisplayName","roleNames","admin","getRoleColor","roleColors","logout","window","location","href","formatUserDisplayName","user","name","username","email","canAccessRoute","routePermissions","validatePassword","password","errors","push","isValid","length","test","strength","getPasswordStrength","score","generateSecurePassword","charset","Math","floor","random","i","sort","join","extendSession","toString","checkSessionTimeout","timeoutMinutes","lastActivity","lastActivityTime","parseInt","timeoutMs","initSessionTracking","updateActivity","events","forEach","event","document","addEventListener","passive","checkInterval","setInterval","clearInterval","removeEventListener"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/utils/auth.js"],"sourcesContent":["// Authentication utility functions\n\n// Token management\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\n\nexport const setToken = (token) => {\n  if (token) {\n    localStorage.setItem('token', token);\n  }\n};\n\nexport const removeToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Set auth token in axios headers\nexport const setAuthToken = (token) => {\n  if (token) {\n    // Set default auth header for all requests\n    localStorage.setItem('token', token);\n  } else {\n    // Remove auth header\n    localStorage.removeItem('token');\n  }\n};\n\nexport const removeAuthToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) return false;\n  \n  try {\n    // Check if token is expired\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    \n    return payload.exp > currentTime;\n  } catch (error) {\n    console.error('Token validation error:', error);\n    return false;\n  }\n};\n\n// Get user data from token\nexport const getUserFromToken = () => {\n  const token = getToken();\n  if (!token) return null;\n  \n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return {\n      id: payload.userId,\n      role: payload.role,\n      exp: payload.exp,\n      iat: payload.iat,\n    };\n  } catch (error) {\n    console.error('Token parsing error:', error);\n    return null;\n  }\n};\n\n// Check if token is about to expire (within 5 minutes)\nexport const isTokenExpiringSoon = () => {\n  const token = getToken();\n  if (!token) return false;\n  \n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    const fiveMinutes = 5 * 60; // 5 minutes in seconds\n    \n    return payload.exp - currentTime < fiveMinutes;\n  } catch (error) {\n    console.error('Token expiration check error:', error);\n    return false;\n  }\n};\n\n// Role-based access control\nexport const hasRole = (userRole, requiredRoles) => {\n  if (!userRole || !requiredRoles) return false;\n  \n  if (Array.isArray(requiredRoles)) {\n    return requiredRoles.includes(userRole);\n  }\n  \n  return userRole === requiredRoles;\n};\n\n// Permission-based access control\nexport const hasPermission = (userRole, permission) => {\n  if (!userRole) return false;\n  \n  // Admin has all permissions\n  if (userRole === 'admin') return true;\n  \n  // Define role-based permissions\n  const rolePermissions = {\n    magaza_personeli: [\n      'orders.create',\n      'orders.read',\n      'orders.update',\n      'orders.delete',\n      'tasks.read',\n      'notifications.read',\n      'profile.update',\n      'users.read', // Can view other users\n    ],\n    fabrika_iscisi: [\n      'tasks.read',\n      'tasks.update',\n      'tasks.complete',\n      'orders.read',\n      'orders.update_status',\n      'notifications.read',\n      'profile.update',\n    ],\n  };\n  \n  const userPermissions = rolePermissions[userRole] || [];\n  return userPermissions.includes(permission);\n};\n\n// Get role display name\nexport const getRoleDisplayName = (role) => {\n  const roleNames = {\n    admin: 'İşletme Sahibi',\n    magaza_personeli: 'Mağaza Personeli',\n    fabrika_iscisi: 'Fabrika İşçisi',\n  };\n  \n  return roleNames[role] || role;\n};\n\n// Get role color for UI\nexport const getRoleColor = (role) => {\n  const roleColors = {\n    admin: 'bg-purple-100 text-purple-800',\n    magaza_personeli: 'bg-blue-100 text-blue-800',\n    fabrika_iscisi: 'bg-green-100 text-green-800',\n  };\n  \n  return roleColors[role] || 'bg-gray-100 text-gray-800';\n};\n\n// Logout utility\nexport const logout = () => {\n  removeAuthToken();\n  // Clear any other stored user data\n  localStorage.removeItem('user');\n  localStorage.removeItem('preferences');\n  \n  // Redirect to login page\n  window.location.href = '/login';\n};\n\n// Format user display name\nexport const formatUserDisplayName = (user) => {\n  if (!user) return 'Kullanıcı';\n  \n  if (user.name) {\n    return user.name;\n  }\n  \n  if (user.username) {\n    return user.username;\n  }\n  \n  if (user.email) {\n    return user.email.split('@')[0];\n  }\n  \n  return 'Kullanıcı';\n};\n\n// Check if user can access route\nexport const canAccessRoute = (userRole, routePermissions) => {\n  if (!routePermissions) return true; // Public route\n  if (!userRole) return false; // Not authenticated\n  \n  // Admin can access all routes\n  if (userRole === 'admin') return true;\n  \n  // Check if user role is in allowed roles\n  if (Array.isArray(routePermissions)) {\n    return routePermissions.includes(userRole);\n  }\n  \n  return userRole === routePermissions;\n};\n\n// Validate password strength\nexport const validatePassword = (password) => {\n  const errors = [];\n  \n  if (!password) {\n    errors.push('Şifre gereklidir');\n    return { isValid: false, errors };\n  }\n  \n  if (password.length < 6) {\n    errors.push('Şifre en az 6 karakter olmalıdır');\n  }\n  \n  if (!/(?=.*[a-z])/.test(password)) {\n    errors.push('Şifre en az bir küçük harf içermelidir');\n  }\n  \n  if (!/(?=.*[A-Z])/.test(password)) {\n    errors.push('Şifre en az bir büyük harf içermelidir');\n  }\n  \n  if (!/(?=.*\\d)/.test(password)) {\n    errors.push('Şifre en az bir rakam içermelidir');\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    strength: getPasswordStrength(password),\n  };\n};\n\n// Get password strength score\nconst getPasswordStrength = (password) => {\n  let score = 0;\n  \n  if (password.length >= 6) score += 1;\n  if (password.length >= 10) score += 1;\n  if (/(?=.*[a-z])/.test(password)) score += 1;\n  if (/(?=.*[A-Z])/.test(password)) score += 1;\n  if (/(?=.*\\d)/.test(password)) score += 1;\n  if (/(?=.*[^\\w\\s])/.test(password)) score += 1;\n  \n  if (score <= 2) return 'weak';\n  if (score <= 4) return 'medium';\n  return 'strong';\n};\n\n// Generate secure random password\nexport const generateSecurePassword = (length = 12) => {\n  const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';\n  let password = '';\n  \n  // Ensure at least one character from each required type\n  password += 'abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random() * 26)];\n  password += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random() * 26)];\n  password += '0123456789'[Math.floor(Math.random() * 10)];\n  password += '!@#$%^&*'[Math.floor(Math.random() * 8)];\n  \n  // Fill the rest randomly\n  for (let i = password.length; i < length; i++) {\n    password += charset[Math.floor(Math.random() * charset.length)];\n  }\n  \n  // Shuffle the password\n  return password.split('').sort(() => Math.random() - 0.5).join('');\n};\n\n// Session management\nexport const extendSession = () => {\n  const token = getToken();\n  if (token && isAuthenticated()) {\n    // Update last activity timestamp\n    localStorage.setItem('lastActivity', Date.now().toString());\n    return true;\n  }\n  return false;\n};\n\nexport const checkSessionTimeout = (timeoutMinutes = 30) => {\n  const lastActivity = localStorage.getItem('lastActivity');\n  if (!lastActivity) return false;\n  \n  const now = Date.now();\n  const lastActivityTime = parseInt(lastActivity);\n  const timeoutMs = timeoutMinutes * 60 * 1000;\n  \n  return (now - lastActivityTime) > timeoutMs;\n};\n\n// Initialize session tracking\nexport const initSessionTracking = (timeoutMinutes = 30) => {\n  // Update activity on user interactions\n  const updateActivity = () => {\n    if (isAuthenticated()) {\n      localStorage.setItem('lastActivity', Date.now().toString());\n    }\n  };\n  \n  // Track user activity\n  const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];\n  events.forEach(event => {\n    document.addEventListener(event, updateActivity, { passive: true });\n  });\n  \n  // Check session timeout periodically\n  const checkInterval = setInterval(() => {\n    if (checkSessionTimeout(timeoutMinutes)) {\n      clearInterval(checkInterval);\n      logout();\n    }\n  }, 60000); // Check every minute\n  \n  // Initial activity timestamp\n  updateActivity();\n  \n  return () => {\n    // Cleanup function\n    events.forEach(event => {\n      document.removeEventListener(event, updateActivity);\n    });\n    clearInterval(checkInterval);\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}