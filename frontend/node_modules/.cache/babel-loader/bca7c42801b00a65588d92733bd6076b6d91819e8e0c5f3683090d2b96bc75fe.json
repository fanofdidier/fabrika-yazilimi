{"ast":null,"code":"import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../../contexts/AuthContext';import LoadingSpinner from'../UI/LoadingSpinner';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PublicRoute=_ref=>{let{children,redirectTo='/dashboard'}=_ref;const{user,loading,isAuthenticated}=useAuth();const location=useLocation();// Show loading spinner while checking authentication\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{size:\"lg\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-sm text-gray-600\",children:\"Yetkilendirme kontrol ediliyor...\"})]})});}// If user is authenticated, redirect to dashboard or intended page\nif(isAuthenticated&&user){var _location$state;// Check if there's a redirect location from previous navigation\nconst from=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.from)||redirectTo;return/*#__PURE__*/_jsx(Navigate,{to:from,replace:true});}// User is not authenticated, show public content\nreturn children;};export default PublicRoute;","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","PublicRoute","_ref","children","redirectTo","user","loading","isAuthenticated","location","className","size","_location$state","from","state","to","replace"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/components/Auth/PublicRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst PublicRoute = ({ children, redirectTo = '/dashboard' }) => {\n  const { user, loading, isAuthenticated } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <LoadingSpinner size=\"lg\" />\n          <p className=\"mt-4 text-sm text-gray-600\">Yetkilendirme kontrol ediliyor...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // If user is authenticated, redirect to dashboard or intended page\n  if (isAuthenticated && user) {\n    // Check if there's a redirect location from previous navigation\n    const from = location.state?.from || redirectTo;\n    return <Navigate to={from} replace />;\n  }\n\n  // User is not authenticated, show public content\n  return children;\n};\n\nexport default PublicRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,4BAA4B,CACpD,MAAO,CAAAC,cAAc,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAA6C,IAA5C,CAAEC,QAAQ,CAAEC,UAAU,CAAG,YAAa,CAAC,CAAAF,IAAA,CAC1D,KAAM,CAAEG,IAAI,CAAEC,OAAO,CAAEC,eAAgB,CAAC,CAAGZ,OAAO,CAAC,CAAC,CACpD,KAAM,CAAAa,QAAQ,CAAGd,WAAW,CAAC,CAAC,CAE9B;AACA,GAAIY,OAAO,CAAE,CACX,mBACER,IAAA,QAAKW,SAAS,CAAC,0DAA0D,CAAAN,QAAA,cACvEH,KAAA,QAAKS,SAAS,CAAC,aAAa,CAAAN,QAAA,eAC1BL,IAAA,CAACF,cAAc,EAACc,IAAI,CAAC,IAAI,CAAE,CAAC,cAC5BZ,IAAA,MAAGW,SAAS,CAAC,4BAA4B,CAAAN,QAAA,CAAC,mCAAiC,CAAG,CAAC,EAC5E,CAAC,CACH,CAAC,CAEV,CAEA;AACA,GAAII,eAAe,EAAIF,IAAI,CAAE,KAAAM,eAAA,CAC3B;AACA,KAAM,CAAAC,IAAI,CAAG,EAAAD,eAAA,CAAAH,QAAQ,CAACK,KAAK,UAAAF,eAAA,iBAAdA,eAAA,CAAgBC,IAAI,GAAIR,UAAU,CAC/C,mBAAON,IAAA,CAACL,QAAQ,EAACqB,EAAE,CAAEF,IAAK,CAACG,OAAO,MAAE,CAAC,CACvC,CAEA;AACA,MAAO,CAAAZ,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}