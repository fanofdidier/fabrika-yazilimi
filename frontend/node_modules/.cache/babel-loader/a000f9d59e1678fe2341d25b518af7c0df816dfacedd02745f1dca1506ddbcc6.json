{"ast":null,"code":"// Authentication utility functions\n// Token management\nexport const getToken=()=>{return localStorage.getItem('token');};export const setToken=token=>{if(token){localStorage.setItem('token',token);}};export const removeToken=()=>{localStorage.removeItem('token');};// Set auth token in axios headers\nexport const setAuthToken=token=>{if(token){// Set default auth header for all requests\nlocalStorage.setItem('token',token);}else{// Remove auth header\nlocalStorage.removeItem('token');}};export const removeAuthToken=()=>{localStorage.removeItem('token');};// Check if user is authenticated\nexport const isAuthenticated=()=>{const token=getToken();if(!token)return false;try{// Check if token is expired\nconst payload=JSON.parse(atob(token.split('.')[1]));const currentTime=Date.now()/1000;return payload.exp>currentTime;}catch(error){console.error('Token validation error:',error);return false;}};// Get user data from token\nexport const getUserFromToken=()=>{const token=getToken();if(!token)return null;try{const payload=JSON.parse(atob(token.split('.')[1]));return{id:payload.userId,role:payload.role,exp:payload.exp,iat:payload.iat};}catch(error){console.error('Token parsing error:',error);return null;}};// Check if token is about to expire (within 5 minutes)\nexport const isTokenExpiringSoon=()=>{const token=getToken();if(!token)return false;try{const payload=JSON.parse(atob(token.split('.')[1]));const currentTime=Date.now()/1000;const fiveMinutes=5*60;// 5 minutes in seconds\nreturn payload.exp-currentTime<fiveMinutes;}catch(error){console.error('Token expiration check error:',error);return false;}};// Role-based access control\nexport const hasRole=(userRole,requiredRoles)=>{if(!userRole||!requiredRoles)return false;if(Array.isArray(requiredRoles)){return requiredRoles.includes(userRole);}return userRole===requiredRoles;};// Permission-based access control\nexport const hasPermission=(userRole,permission)=>{if(!userRole)return false;// Admin has all permissions\nif(userRole==='admin')return true;// Define role-based permissions\nconst rolePermissions={magaza_personeli:['orders.create','orders.read','orders.update','orders.delete','tasks.read','notifications.read','profile.update','users.read'// Can view other users\n],fabrika_iscisi:['tasks.read','tasks.update','tasks.complete','orders.read','orders.update_status','notifications.read','profile.update']};const userPermissions=rolePermissions[userRole]||[];return userPermissions.includes(permission);};// Get role display name\nexport const getRoleDisplayName=role=>{const roleNames={admin:'İşletme Sahibi',magaza_personeli:'Mağaza Personeli',fabrika_iscisi:'Fabrika İşçisi'};return roleNames[role]||role;};// Get role color for UI\nexport const getRoleColor=role=>{const roleColors={admin:'bg-purple-100 text-purple-800',magaza_personeli:'bg-blue-100 text-blue-800',fabrika_iscisi:'bg-green-100 text-green-800'};return roleColors[role]||'bg-gray-100 text-gray-800';};// Logout utility\nexport const logout=()=>{removeAuthToken();// Clear any other stored user data\nlocalStorage.removeItem('user');localStorage.removeItem('preferences');// Redirect to login page\nwindow.location.href='/login';};// Format user display name\nexport const formatUserDisplayName=user=>{if(!user)return'Kullanıcı';if(user.name){return user.name;}if(user.username){return user.username;}if(user.email){return user.email.split('@')[0];}return'Kullanıcı';};// Check if user can access route\nexport const canAccessRoute=(userRole,routePermissions)=>{if(!routePermissions)return true;// Public route\nif(!userRole)return false;// Not authenticated\n// Admin can access all routes\nif(userRole==='admin')return true;// Check if user role is in allowed roles\nif(Array.isArray(routePermissions)){return routePermissions.includes(userRole);}return userRole===routePermissions;};// Validate password strength\nexport const validatePassword=password=>{const errors=[];if(!password){errors.push('Şifre gereklidir');return{isValid:false,errors};}if(password.length<6){errors.push('Şifre en az 6 karakter olmalıdır');}if(!/(?=.*[a-z])/.test(password)){errors.push('Şifre en az bir küçük harf içermelidir');}if(!/(?=.*[A-Z])/.test(password)){errors.push('Şifre en az bir büyük harf içermelidir');}if(!/(?=.*\\d)/.test(password)){errors.push('Şifre en az bir rakam içermelidir');}return{isValid:errors.length===0,errors,strength:getPasswordStrength(password)};};// Get password strength score\nconst getPasswordStrength=password=>{let score=0;if(password.length>=6)score+=1;if(password.length>=10)score+=1;if(/(?=.*[a-z])/.test(password))score+=1;if(/(?=.*[A-Z])/.test(password))score+=1;if(/(?=.*\\d)/.test(password))score+=1;if(/(?=.*[^\\w\\s])/.test(password))score+=1;if(score<=2)return'weak';if(score<=4)return'medium';return'strong';};// Generate secure random password\nexport const generateSecurePassword=function(){let length=arguments.length>0&&arguments[0]!==undefined?arguments[0]:12;const charset='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';let password='';// Ensure at least one character from each required type\npassword+='abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random()*26)];password+='ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random()*26)];password+='0123456789'[Math.floor(Math.random()*10)];password+='!@#$%^&*'[Math.floor(Math.random()*8)];// Fill the rest randomly\nfor(let i=password.length;i<length;i++){password+=charset[Math.floor(Math.random()*charset.length)];}// Shuffle the password\nreturn password.split('').sort(()=>Math.random()-0.5).join('');};// Session management\nexport const extendSession=()=>{const token=getToken();if(token&&isAuthenticated()){// Update last activity timestamp\nlocalStorage.setItem('lastActivity',Date.now().toString());return true;}return false;};export const checkSessionTimeout=function(){let timeoutMinutes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30;const lastActivity=localStorage.getItem('lastActivity');if(!lastActivity)return false;const now=Date.now();const lastActivityTime=parseInt(lastActivity);const timeoutMs=timeoutMinutes*60*1000;return now-lastActivityTime>timeoutMs;};// Initialize session tracking\nexport const initSessionTracking=function(){let timeoutMinutes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:30;// Update activity on user interactions\nconst updateActivity=()=>{if(isAuthenticated()){localStorage.setItem('lastActivity',Date.now().toString());}};// Track user activity\nconst events=['mousedown','mousemove','keypress','scroll','touchstart','click'];events.forEach(event=>{document.addEventListener(event,updateActivity,{passive:true});});// Check session timeout periodically\nconst checkInterval=setInterval(()=>{if(checkSessionTimeout(timeoutMinutes)){clearInterval(checkInterval);logout();}},60000);// Check every minute\n// Initial activity timestamp\nupdateActivity();return()=>{// Cleanup function\nevents.forEach(event=>{document.removeEventListener(event,updateActivity);});clearInterval(checkInterval);};};","map":{"version":3,"names":["getToken","localStorage","getItem","setToken","token","setItem","removeToken","removeItem","setAuthToken","removeAuthToken","isAuthenticated","payload","JSON","parse","atob","split","currentTime","Date","now","exp","error","console","getUserFromToken","id","userId","role","iat","isTokenExpiringSoon","fiveMinutes","hasRole","userRole","requiredRoles","Array","isArray","includes","hasPermission","permission","rolePermissions","magaza_personeli","fabrika_iscisi","userPermissions","getRoleDisplayName","roleNames","admin","getRoleColor","roleColors","logout","window","location","href","formatUserDisplayName","user","name","username","email","canAccessRoute","routePermissions","validatePassword","password","errors","push","isValid","length","test","strength","getPasswordStrength","score","generateSecurePassword","arguments","undefined","charset","Math","floor","random","i","sort","join","extendSession","toString","checkSessionTimeout","timeoutMinutes","lastActivity","lastActivityTime","parseInt","timeoutMs","initSessionTracking","updateActivity","events","forEach","event","document","addEventListener","passive","checkInterval","setInterval","clearInterval","removeEventListener"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/utils/auth.js"],"sourcesContent":["// Authentication utility functions\n\n// Token management\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\n\nexport const setToken = (token) => {\n  if (token) {\n    localStorage.setItem('token', token);\n  }\n};\n\nexport const removeToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Set auth token in axios headers\nexport const setAuthToken = (token) => {\n  if (token) {\n    // Set default auth header for all requests\n    localStorage.setItem('token', token);\n  } else {\n    // Remove auth header\n    localStorage.removeItem('token');\n  }\n};\n\nexport const removeAuthToken = () => {\n  localStorage.removeItem('token');\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  const token = getToken();\n  if (!token) return false;\n  \n  try {\n    // Check if token is expired\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    \n    return payload.exp > currentTime;\n  } catch (error) {\n    console.error('Token validation error:', error);\n    return false;\n  }\n};\n\n// Get user data from token\nexport const getUserFromToken = () => {\n  const token = getToken();\n  if (!token) return null;\n  \n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return {\n      id: payload.userId,\n      role: payload.role,\n      exp: payload.exp,\n      iat: payload.iat,\n    };\n  } catch (error) {\n    console.error('Token parsing error:', error);\n    return null;\n  }\n};\n\n// Check if token is about to expire (within 5 minutes)\nexport const isTokenExpiringSoon = () => {\n  const token = getToken();\n  if (!token) return false;\n  \n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    const currentTime = Date.now() / 1000;\n    const fiveMinutes = 5 * 60; // 5 minutes in seconds\n    \n    return payload.exp - currentTime < fiveMinutes;\n  } catch (error) {\n    console.error('Token expiration check error:', error);\n    return false;\n  }\n};\n\n// Role-based access control\nexport const hasRole = (userRole, requiredRoles) => {\n  if (!userRole || !requiredRoles) return false;\n  \n  if (Array.isArray(requiredRoles)) {\n    return requiredRoles.includes(userRole);\n  }\n  \n  return userRole === requiredRoles;\n};\n\n// Permission-based access control\nexport const hasPermission = (userRole, permission) => {\n  if (!userRole) return false;\n  \n  // Admin has all permissions\n  if (userRole === 'admin') return true;\n  \n  // Define role-based permissions\n  const rolePermissions = {\n    magaza_personeli: [\n      'orders.create',\n      'orders.read',\n      'orders.update',\n      'orders.delete',\n      'tasks.read',\n      'notifications.read',\n      'profile.update',\n      'users.read', // Can view other users\n    ],\n    fabrika_iscisi: [\n      'tasks.read',\n      'tasks.update',\n      'tasks.complete',\n      'orders.read',\n      'orders.update_status',\n      'notifications.read',\n      'profile.update',\n    ],\n  };\n  \n  const userPermissions = rolePermissions[userRole] || [];\n  return userPermissions.includes(permission);\n};\n\n// Get role display name\nexport const getRoleDisplayName = (role) => {\n  const roleNames = {\n    admin: 'İşletme Sahibi',\n    magaza_personeli: 'Mağaza Personeli',\n    fabrika_iscisi: 'Fabrika İşçisi',\n  };\n  \n  return roleNames[role] || role;\n};\n\n// Get role color for UI\nexport const getRoleColor = (role) => {\n  const roleColors = {\n    admin: 'bg-purple-100 text-purple-800',\n    magaza_personeli: 'bg-blue-100 text-blue-800',\n    fabrika_iscisi: 'bg-green-100 text-green-800',\n  };\n  \n  return roleColors[role] || 'bg-gray-100 text-gray-800';\n};\n\n// Logout utility\nexport const logout = () => {\n  removeAuthToken();\n  // Clear any other stored user data\n  localStorage.removeItem('user');\n  localStorage.removeItem('preferences');\n  \n  // Redirect to login page\n  window.location.href = '/login';\n};\n\n// Format user display name\nexport const formatUserDisplayName = (user) => {\n  if (!user) return 'Kullanıcı';\n  \n  if (user.name) {\n    return user.name;\n  }\n  \n  if (user.username) {\n    return user.username;\n  }\n  \n  if (user.email) {\n    return user.email.split('@')[0];\n  }\n  \n  return 'Kullanıcı';\n};\n\n// Check if user can access route\nexport const canAccessRoute = (userRole, routePermissions) => {\n  if (!routePermissions) return true; // Public route\n  if (!userRole) return false; // Not authenticated\n  \n  // Admin can access all routes\n  if (userRole === 'admin') return true;\n  \n  // Check if user role is in allowed roles\n  if (Array.isArray(routePermissions)) {\n    return routePermissions.includes(userRole);\n  }\n  \n  return userRole === routePermissions;\n};\n\n// Validate password strength\nexport const validatePassword = (password) => {\n  const errors = [];\n  \n  if (!password) {\n    errors.push('Şifre gereklidir');\n    return { isValid: false, errors };\n  }\n  \n  if (password.length < 6) {\n    errors.push('Şifre en az 6 karakter olmalıdır');\n  }\n  \n  if (!/(?=.*[a-z])/.test(password)) {\n    errors.push('Şifre en az bir küçük harf içermelidir');\n  }\n  \n  if (!/(?=.*[A-Z])/.test(password)) {\n    errors.push('Şifre en az bir büyük harf içermelidir');\n  }\n  \n  if (!/(?=.*\\d)/.test(password)) {\n    errors.push('Şifre en az bir rakam içermelidir');\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors,\n    strength: getPasswordStrength(password),\n  };\n};\n\n// Get password strength score\nconst getPasswordStrength = (password) => {\n  let score = 0;\n  \n  if (password.length >= 6) score += 1;\n  if (password.length >= 10) score += 1;\n  if (/(?=.*[a-z])/.test(password)) score += 1;\n  if (/(?=.*[A-Z])/.test(password)) score += 1;\n  if (/(?=.*\\d)/.test(password)) score += 1;\n  if (/(?=.*[^\\w\\s])/.test(password)) score += 1;\n  \n  if (score <= 2) return 'weak';\n  if (score <= 4) return 'medium';\n  return 'strong';\n};\n\n// Generate secure random password\nexport const generateSecurePassword = (length = 12) => {\n  const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';\n  let password = '';\n  \n  // Ensure at least one character from each required type\n  password += 'abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random() * 26)];\n  password += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random() * 26)];\n  password += '0123456789'[Math.floor(Math.random() * 10)];\n  password += '!@#$%^&*'[Math.floor(Math.random() * 8)];\n  \n  // Fill the rest randomly\n  for (let i = password.length; i < length; i++) {\n    password += charset[Math.floor(Math.random() * charset.length)];\n  }\n  \n  // Shuffle the password\n  return password.split('').sort(() => Math.random() - 0.5).join('');\n};\n\n// Session management\nexport const extendSession = () => {\n  const token = getToken();\n  if (token && isAuthenticated()) {\n    // Update last activity timestamp\n    localStorage.setItem('lastActivity', Date.now().toString());\n    return true;\n  }\n  return false;\n};\n\nexport const checkSessionTimeout = (timeoutMinutes = 30) => {\n  const lastActivity = localStorage.getItem('lastActivity');\n  if (!lastActivity) return false;\n  \n  const now = Date.now();\n  const lastActivityTime = parseInt(lastActivity);\n  const timeoutMs = timeoutMinutes * 60 * 1000;\n  \n  return (now - lastActivityTime) > timeoutMs;\n};\n\n// Initialize session tracking\nexport const initSessionTracking = (timeoutMinutes = 30) => {\n  // Update activity on user interactions\n  const updateActivity = () => {\n    if (isAuthenticated()) {\n      localStorage.setItem('lastActivity', Date.now().toString());\n    }\n  };\n  \n  // Track user activity\n  const events = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click'];\n  events.forEach(event => {\n    document.addEventListener(event, updateActivity, { passive: true });\n  });\n  \n  // Check session timeout periodically\n  const checkInterval = setInterval(() => {\n    if (checkSessionTimeout(timeoutMinutes)) {\n      clearInterval(checkInterval);\n      logout();\n    }\n  }, 60000); // Check every minute\n  \n  // Initial activity timestamp\n  updateActivity();\n  \n  return () => {\n    // Cleanup function\n    events.forEach(event => {\n      document.removeEventListener(event, updateActivity);\n    });\n    clearInterval(checkInterval);\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}