{"ast":null,"code":"var _jsxFileName = \"/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport api from '../services/api';\nimport { setAuthToken, removeAuthToken } from '../utils/auth';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Set token in API headers\n      setAuthToken(token);\n      // Try to load user from backend\n      loadUser();\n    } else {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: 'No token found'\n      });\n    }\n  }, []);\n\n  // Load user data\n  const loadUser = async () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOAD_USER_START\n    });\n    try {\n      const response = await api.get('/auth/me');\n      if (response.data.success) {\n        dispatch({\n          type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n          payload: response.data.data.user\n        });\n      } else {\n        throw new Error(response.data.message || 'Kullanıcı bilgileri alınamadı');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Load user error:', error);\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Kullanıcı bilgileri yüklenemedi'\n      });\n      // Remove invalid token\n      removeAuthToken();\n    }\n  };\n\n  // Login function\n  const login = async credentials => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data.data;\n\n        // Store token and set in API headers\n        localStorage.setItem('token', token);\n        setAuthToken(token);\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user,\n            token\n          }\n        });\n        toast.success(`Hoş geldiniz, ${user.firstName || user.username}!`);\n        return {\n          success: true\n        };\n      } else {\n        throw new Error(response.data.message || 'Giriş yapılamadı');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Login error:', error);\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Giriş yapılamadı';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint to invalidate token on server\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Always clear local state\n      localStorage.removeItem('token');\n      removeAuthToken();\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      toast.success('Başarıyla çıkış yapıldı');\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      const updatedUser = response.data.user;\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: updatedUser\n      });\n      toast.success('Profil başarıyla güncellendi');\n      return {\n        success: true,\n        user: updatedUser\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Update profile error:', error);\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profil güncellenemedi';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async passwordData => {\n    try {\n      await api.put('/auth/change-password', passwordData);\n      toast.success('Şifre başarıyla değiştirildi');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Change password error:', error);\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Şifre değiştirilemedi';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Check if user has required role\n  const hasRole = requiredRoles => {\n    if (!state.user || !requiredRoles) return false;\n    if (Array.isArray(requiredRoles)) {\n      return requiredRoles.includes(state.user.role);\n    }\n    return state.user.role === requiredRoles;\n  };\n\n  // Check if user has permission\n  const hasPermission = permission => {\n    if (!state.user) return false;\n\n    // Admin has all permissions\n    if (state.user.role === 'admin') return true;\n\n    // Define role-based permissions\n    const rolePermissions = {\n      magaza_personeli: ['orders.create', 'orders.read', 'orders.update', 'tasks.read', 'notifications.read', 'profile.update'],\n      fabrika_iscisi: ['tasks.read', 'tasks.update', 'orders.read', 'orders.update_status', 'notifications.read', 'profile.update']\n    };\n    const userPermissions = rolePermissions[state.user.role] || [];\n    return userPermissions.includes(permission);\n  };\n\n  // Get user display name\n  const getUserDisplayName = () => {\n    if (!state.user) return '';\n    return state.user.name || state.user.username || 'Kullanıcı';\n  };\n\n  // Get user role display name\n  const getUserRoleDisplayName = () => {\n    if (!state.user) return '';\n    const roleNames = {\n      admin: 'İşletme Sahibi',\n      magaza_personeli: 'Mağaza Personeli',\n      fabrika_iscisi: 'Fabrika İşçisi'\n    };\n    return roleNames[state.user.role] || state.user.role;\n  };\n  const value = {\n    // State\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: !!state.user,\n    // Actions\n    login,\n    logout,\n    loadUser,\n    updateProfile,\n    changePassword,\n    clearError,\n    // Utilities\n    hasRole,\n    hasPermission,\n    getUserDisplayName,\n    getUserRoleDisplayName\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","toast","api","setAuthToken","removeAuthToken","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_USER","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","loadUser","response","get","data","success","Error","message","_error$response","_error$response$data","console","login","credentials","post","setItem","firstName","username","_error$response2","_error$response2$data","errorMessage","logout","removeItem","updateProfile","userData","put","updatedUser","_error$response3","_error$response3$data","changePassword","passwordData","_error$response4","_error$response4$data","clearError","hasRole","requiredRoles","Array","isArray","includes","role","hasPermission","permission","rolePermissions","magaza_personeli","fabrika_iscisi","userPermissions","getUserDisplayName","name","getUserRoleDisplayName","roleNames","admin","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport api from '../services/api';\nimport { setAuthToken, removeAuthToken } from '../utils/auth';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null,\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      // Set token in API headers\n      setAuthToken(token);\n      // Try to load user from backend\n      loadUser();\n    } else {\n      dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'No token found' });\n    }\n  }, []);\n\n  // Load user data\n  const loadUser = async () => {\n    dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n    \n    try {\n      const response = await api.get('/auth/me');\n      if (response.data.success) {\n        dispatch({ \n          type: AUTH_ACTIONS.LOAD_USER_SUCCESS, \n          payload: response.data.data.user \n        });\n      } else {\n        throw new Error(response.data.message || 'Kullanıcı bilgileri alınamadı');\n      }\n    } catch (error) {\n      console.error('Load user error:', error);\n      dispatch({ \n        type: AUTH_ACTIONS.LOAD_USER_FAILURE, \n        payload: error.response?.data?.message || 'Kullanıcı bilgileri yüklenemedi' \n      });\n      // Remove invalid token\n      removeAuthToken();\n    }\n  };\n\n  // Login function\n  const login = async (credentials) => {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n    \n    try {\n      const response = await api.post('/auth/login', credentials);\n      \n      if (response.data.success) {\n        const { token, user } = response.data.data;\n        \n        // Store token and set in API headers\n        localStorage.setItem('token', token);\n        setAuthToken(token);\n        \n        dispatch({ \n          type: AUTH_ACTIONS.LOGIN_SUCCESS, \n          payload: { user, token } \n        });\n        \n        toast.success(`Hoş geldiniz, ${user.firstName || user.username}!`);\n        return { success: true };\n      } else {\n        throw new Error(response.data.message || 'Giriş yapılamadı');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      const errorMessage = error.response?.data?.message || 'Giriş yapılamadı';\n      \n      dispatch({ \n        type: AUTH_ACTIONS.LOGIN_FAILURE, \n        payload: errorMessage \n      });\n      \n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint to invalidate token on server\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Always clear local state\n      localStorage.removeItem('token');\n      removeAuthToken();\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      toast.success('Başarıyla çıkış yapıldı');\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      const updatedUser = response.data.user;\n      \n      dispatch({ \n        type: AUTH_ACTIONS.UPDATE_USER, \n        payload: updatedUser \n      });\n      \n      toast.success('Profil başarıyla güncellendi');\n      return { success: true, user: updatedUser };\n    } catch (error) {\n      console.error('Update profile error:', error);\n      const errorMessage = error.response?.data?.message || 'Profil güncellenemedi';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Change password\n  const changePassword = async (passwordData) => {\n    try {\n      await api.put('/auth/change-password', passwordData);\n      toast.success('Şifre başarıyla değiştirildi');\n      return { success: true };\n    } catch (error) {\n      console.error('Change password error:', error);\n      const errorMessage = error.response?.data?.message || 'Şifre değiştirilemedi';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Check if user has required role\n  const hasRole = (requiredRoles) => {\n    if (!state.user || !requiredRoles) return false;\n    if (Array.isArray(requiredRoles)) {\n      return requiredRoles.includes(state.user.role);\n    }\n    return state.user.role === requiredRoles;\n  };\n\n  // Check if user has permission\n  const hasPermission = (permission) => {\n    if (!state.user) return false;\n    \n    // Admin has all permissions\n    if (state.user.role === 'admin') return true;\n    \n    // Define role-based permissions\n    const rolePermissions = {\n      magaza_personeli: [\n        'orders.create',\n        'orders.read',\n        'orders.update',\n        'tasks.read',\n        'notifications.read',\n        'profile.update',\n      ],\n      fabrika_iscisi: [\n        'tasks.read',\n        'tasks.update',\n        'orders.read',\n        'orders.update_status',\n        'notifications.read',\n        'profile.update',\n      ],\n    };\n    \n    const userPermissions = rolePermissions[state.user.role] || [];\n    return userPermissions.includes(permission);\n  };\n\n  // Get user display name\n  const getUserDisplayName = () => {\n    if (!state.user) return '';\n    return state.user.name || state.user.username || 'Kullanıcı';\n  };\n\n  // Get user role display name\n  const getUserRoleDisplayName = () => {\n    if (!state.user) return '';\n    \n    const roleNames = {\n      admin: 'İşletme Sahibi',\n      magaza_personeli: 'Mağaza Personeli',\n      fabrika_iscisi: 'Fabrika İşçisi',\n    };\n    \n    return roleNames[state.user.role] || state.user.role;\n  };\n\n  const value = {\n    // State\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: !!state.user,\n    \n    // Actions\n    login,\n    logout,\n    loadUser,\n    updateProfile,\n    changePassword,\n    clearError,\n    \n    // Utilities\n    hasRole,\n    hasPermission,\n    getUserDisplayName,\n    getUserRoleDisplayName,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}