{"ast":null,"code":"import _objectSpread from\"/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useCallback}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const PopupNotificationContext=/*#__PURE__*/createContext();export const usePopupNotification=()=>{const context=useContext(PopupNotificationContext);if(!context){throw new Error('usePopupNotification must be used within a PopupNotificationProvider');}return context;};export const PopupNotificationProvider=_ref=>{let{children}=_ref;const[notifications,setNotifications]=useState([]);const showNotification=useCallback(notification=>{console.log('🎯 showNotification called with:',notification);console.log('🎯 showNotification function exists:',typeof showNotification);console.log('🎯 Current notifications state:',notifications);const id=Date.now()+Math.random();const newNotification=_objectSpread(_objectSpread({id},notification),{},{timestamp:new Date()});console.log('📝 Adding notification to state:',newNotification);// Tek pop-up göstermek için önceki tüm bildirimleri temizle\nsetNotifications([newNotification]);console.log('📊 Single notification set, count: 1');// Otomatik kaldırma devre dışı - sadece manuel kapatma\n// setTimeout(() => {\n//   console.log('⏰ Auto-removing notification:', id);\n//   setNotifications(prev => prev.filter(notif => notif.id !== id));\n// }, 8000);\n},[notifications]);const removeNotification=useCallback(id=>{setNotifications(prev=>prev.filter(notif=>notif.id!==id));},[]);const clearAllNotifications=useCallback(()=>{setNotifications([]);},[]);const value={notifications,showNotification,removeNotification,clearAllNotifications};return/*#__PURE__*/_jsx(PopupNotificationContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsx","_jsx","PopupNotificationContext","usePopupNotification","context","Error","PopupNotificationProvider","_ref","children","notifications","setNotifications","showNotification","notification","console","log","id","Date","now","Math","random","newNotification","_objectSpread","timestamp","removeNotification","prev","filter","notif","clearAllNotifications","value","Provider"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/contexts/PopupNotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\nconst PopupNotificationContext = createContext();\n\nexport const usePopupNotification = () => {\n  const context = useContext(PopupNotificationContext);\n  if (!context) {\n    throw new Error('usePopupNotification must be used within a PopupNotificationProvider');\n  }\n  return context;\n};\n\nexport const PopupNotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const showNotification = useCallback((notification) => {\n    console.log('🎯 showNotification called with:', notification);\n    console.log('🎯 showNotification function exists:', typeof showNotification);\n    console.log('🎯 Current notifications state:', notifications);\n    \n    const id = Date.now() + Math.random();\n    const newNotification = {\n      id,\n      ...notification,\n      timestamp: new Date()\n    };\n    \n    console.log('📝 Adding notification to state:', newNotification);\n    \n    // Tek pop-up göstermek için önceki tüm bildirimleri temizle\n    setNotifications([newNotification]);\n    console.log('📊 Single notification set, count: 1');\n    \n    // Otomatik kaldırma devre dışı - sadece manuel kapatma\n    // setTimeout(() => {\n    //   console.log('⏰ Auto-removing notification:', id);\n    //   setNotifications(prev => prev.filter(notif => notif.id !== id));\n    // }, 8000);\n  }, [notifications]);\n\n  const removeNotification = useCallback((id) => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  }, []);\n\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n\n  const value = {\n    notifications,\n    showNotification,\n    removeNotification,\n    clearAllNotifications\n  };\n\n  return (\n    <PopupNotificationContext.Provider value={value}>\n      {children}\n    </PopupNotificationContext.Provider>\n  );\n};\n"],"mappings":"yIAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhF,KAAM,CAAAC,wBAAwB,cAAGN,aAAa,CAAC,CAAC,CAEhD,MAAO,MAAM,CAAAO,oBAAoB,CAAGA,CAAA,GAAM,CACxC,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,wBAAwB,CAAC,CACpD,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,sEAAsE,CAAC,CACzF,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,yBAAyB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACpD,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAEtD,KAAM,CAAAa,gBAAgB,CAAGZ,WAAW,CAAEa,YAAY,EAAK,CACrDC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEF,YAAY,CAAC,CAC7DC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAE,MAAO,CAAAH,gBAAgB,CAAC,CAC5EE,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEL,aAAa,CAAC,CAE7D,KAAM,CAAAM,EAAE,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CACrC,KAAM,CAAAC,eAAe,CAAAC,aAAA,CAAAA,aAAA,EACnBN,EAAE,EACCH,YAAY,MACfU,SAAS,CAAE,GAAI,CAAAN,IAAI,CAAC,CAAC,EACtB,CAEDH,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEM,eAAe,CAAC,CAEhE;AACAV,gBAAgB,CAAC,CAACU,eAAe,CAAC,CAAC,CACnCP,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC,CAEnD;AACA;AACA;AACA;AACA;AACF,CAAC,CAAE,CAACL,aAAa,CAAC,CAAC,CAEnB,KAAM,CAAAc,kBAAkB,CAAGxB,WAAW,CAAEgB,EAAE,EAAK,CAC7CL,gBAAgB,CAACc,IAAI,EAAIA,IAAI,CAACC,MAAM,CAACC,KAAK,EAAIA,KAAK,CAACX,EAAE,GAAKA,EAAE,CAAC,CAAC,CACjE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAY,qBAAqB,CAAG5B,WAAW,CAAC,IAAM,CAC9CW,gBAAgB,CAAC,EAAE,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAkB,KAAK,CAAG,CACZnB,aAAa,CACbE,gBAAgB,CAChBY,kBAAkB,CAClBI,qBACF,CAAC,CAED,mBACE1B,IAAA,CAACC,wBAAwB,CAAC2B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAApB,QAAA,CAC7CA,QAAQ,CACwB,CAAC,CAExC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}