{"ast":null,"code":"var _jsxFileName = \"/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/contexts/PopupNotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PopupNotificationContext = /*#__PURE__*/createContext();\nexport const usePopupNotification = () => {\n  _s();\n  const context = useContext(PopupNotificationContext);\n  if (!context) {\n    throw new Error('usePopupNotification must be used within a PopupNotificationProvider');\n  }\n  return context;\n};\n_s(usePopupNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PopupNotificationProvider = ({\n  children\n}) => {\n  _s2();\n  const [notifications, setNotifications] = useState([]);\n  const showNotification = useCallback(notification => {\n    console.log('🎯 showNotification called with:', notification);\n    console.log('🎯 showNotification function exists:', typeof showNotification);\n    console.log('🎯 Current notifications state:', notifications);\n    const id = Date.now() + Math.random();\n    const newNotification = {\n      id,\n      ...notification,\n      timestamp: new Date()\n    };\n    console.log('📝 Adding notification to state:', newNotification);\n\n    // Tek pop-up göstermek için önceki tüm bildirimleri temizle\n    setNotifications([newNotification]);\n    console.log('📊 Single notification set, count: 1');\n\n    // Otomatik kaldırma devre dışı - sadece manuel kapatma\n    // setTimeout(() => {\n    //   console.log('⏰ Auto-removing notification:', id);\n    //   setNotifications(prev => prev.filter(notif => notif.id !== id));\n    // }, 8000);\n  }, [notifications]);\n  const removeNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  }, []);\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n  const value = {\n    notifications,\n    showNotification,\n    removeNotification,\n    clearAllNotifications\n  };\n  return /*#__PURE__*/_jsxDEV(PopupNotificationContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s2(PopupNotificationProvider, \"2ciYqAo011VHk69l7jt4VPmH4l8=\");\n_c = PopupNotificationProvider;\nvar _c;\n$RefreshReg$(_c, \"PopupNotificationProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useCallback","jsxDEV","_jsxDEV","PopupNotificationContext","usePopupNotification","_s","context","Error","PopupNotificationProvider","children","_s2","notifications","setNotifications","showNotification","notification","console","log","id","Date","now","Math","random","newNotification","timestamp","removeNotification","prev","filter","notif","clearAllNotifications","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/contexts/PopupNotificationContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useCallback } from 'react';\n\nconst PopupNotificationContext = createContext();\n\nexport const usePopupNotification = () => {\n  const context = useContext(PopupNotificationContext);\n  if (!context) {\n    throw new Error('usePopupNotification must be used within a PopupNotificationProvider');\n  }\n  return context;\n};\n\nexport const PopupNotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const showNotification = useCallback((notification) => {\n    console.log('🎯 showNotification called with:', notification);\n    console.log('🎯 showNotification function exists:', typeof showNotification);\n    console.log('🎯 Current notifications state:', notifications);\n    \n    const id = Date.now() + Math.random();\n    const newNotification = {\n      id,\n      ...notification,\n      timestamp: new Date()\n    };\n    \n    console.log('📝 Adding notification to state:', newNotification);\n    \n    // Tek pop-up göstermek için önceki tüm bildirimleri temizle\n    setNotifications([newNotification]);\n    console.log('📊 Single notification set, count: 1');\n    \n    // Otomatik kaldırma devre dışı - sadece manuel kapatma\n    // setTimeout(() => {\n    //   console.log('⏰ Auto-removing notification:', id);\n    //   setNotifications(prev => prev.filter(notif => notif.id !== id));\n    // }, 8000);\n  }, [notifications]);\n\n  const removeNotification = useCallback((id) => {\n    setNotifications(prev => prev.filter(notif => notif.id !== id));\n  }, []);\n\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n\n  const value = {\n    notifications,\n    showNotification,\n    removeNotification,\n    clearAllNotifications\n  };\n\n  return (\n    <PopupNotificationContext.Provider value={value}>\n      {children}\n    </PopupNotificationContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,wBAAwB,gBAAGN,aAAa,CAAC,CAAC;AAEhD,OAAO,MAAMO,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAMC,OAAO,GAAGR,UAAU,CAACK,wBAAwB,CAAC;EACpD,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,sEAAsE,CAAC;EACzF;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,oBAAoB;AAQjC,OAAO,MAAMI,yBAAyB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMc,gBAAgB,GAAGb,WAAW,CAAEc,YAAY,IAAK;IACrDC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,YAAY,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAE,OAAOH,gBAAgB,CAAC;IAC5EE,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEL,aAAa,CAAC;IAE7D,MAAMM,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IACrC,MAAMC,eAAe,GAAG;MACtBL,EAAE;MACF,GAAGH,YAAY;MACfS,SAAS,EAAE,IAAIL,IAAI,CAAC;IACtB,CAAC;IAEDH,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEM,eAAe,CAAC;;IAEhE;IACAV,gBAAgB,CAAC,CAACU,eAAe,CAAC,CAAC;IACnCP,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;;IAEnD;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;EAEnB,MAAMa,kBAAkB,GAAGxB,WAAW,CAAEiB,EAAE,IAAK;IAC7CL,gBAAgB,CAACa,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACV,EAAE,KAAKA,EAAE,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,qBAAqB,GAAG5B,WAAW,CAAC,MAAM;IAC9CY,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,KAAK,GAAG;IACZlB,aAAa;IACbE,gBAAgB;IAChBW,kBAAkB;IAClBI;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,wBAAwB,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAC7CA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACwB,CAAC;AAExC,CAAC;AAACxB,GAAA,CAhDWF,yBAAyB;AAAA2B,EAAA,GAAzB3B,yBAAyB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}