{"ast":null,"code":"var _jsxFileName = \"/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/components/Auth/PublicRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicRoute = ({\n  children,\n  redirectTo = '/dashboard'\n}) => {\n  _s();\n  const {\n    user,\n    loading,\n    isAuthenticated\n  } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(LoadingSpinner, {\n          size: \"lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-sm text-gray-600\",\n          children: \"Yetkilendirme kontrol ediliyor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If user is authenticated, redirect to dashboard or intended page\n  if (isAuthenticated && user) {\n    var _location$state;\n    // Check if there's a redirect location from previous navigation\n    const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || redirectTo;\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: from,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is not authenticated, show public content\n  return children;\n};\n_s(PublicRoute, \"pFsEnkRBMaILxsOUKjRm7LGUuP0=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = PublicRoute;\nexport default PublicRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","PublicRoute","children","redirectTo","_s","user","loading","isAuthenticated","location","className","size","fileName","_jsxFileName","lineNumber","columnNumber","_location$state","from","state","to","replace","_c","$RefreshReg$"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/components/Auth/PublicRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst PublicRoute = ({ children, redirectTo = '/dashboard' }) => {\n  const { user, loading, isAuthenticated } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <LoadingSpinner size=\"lg\" />\n          <p className=\"mt-4 text-sm text-gray-600\">Yetkilendirme kontrol ediliyor...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // If user is authenticated, redirect to dashboard or intended page\n  if (isAuthenticated && user) {\n    // Check if there's a redirect location from previous navigation\n    const from = location.state?.from || redirectTo;\n    return <Navigate to={from} replace />;\n  }\n\n  // User is not authenticated, show public content\n  return children;\n};\n\nexport default PublicRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU,GAAG;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAGV,OAAO,CAAC,CAAC;EACpD,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIU,OAAO,EAAE;IACX,oBACEN,OAAA;MAAKS,SAAS,EAAC,0DAA0D;MAAAP,QAAA,eACvEF,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAP,QAAA,gBAC1BF,OAAA,CAACF,cAAc;UAACY,IAAI,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5Bd,OAAA;UAAGS,SAAS,EAAC,4BAA4B;UAAAP,QAAA,EAAC;QAAiC;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAIP,eAAe,IAAIF,IAAI,EAAE;IAAA,IAAAU,eAAA;IAC3B;IACA,MAAMC,IAAI,GAAG,EAAAD,eAAA,GAAAP,QAAQ,CAACS,KAAK,cAAAF,eAAA,uBAAdA,eAAA,CAAgBC,IAAI,KAAIb,UAAU;IAC/C,oBAAOH,OAAA,CAACL,QAAQ;MAACuB,EAAE,EAAEF,IAAK;MAACG,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvC;;EAEA;EACA,OAAOZ,QAAQ;AACjB,CAAC;AAACE,EAAA,CAzBIH,WAAW;EAAA,QAC4BJ,OAAO,EACjCD,WAAW;AAAA;AAAAwB,EAAA,GAFxBnB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}