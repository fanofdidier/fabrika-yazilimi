{"ast":null,"code":"import _objectSpread from\"/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{toast}from'react-hot-toast';import api from'../services/api';import{setAuthToken,removeAuthToken}from'../utils/auth';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,token:localStorage.getItem('token'),loading:true,error:null};// Action types\nconst AUTH_ACTIONS={LOGIN_START:'LOGIN_START',LOGIN_SUCCESS:'LOGIN_SUCCESS',LOGIN_FAILURE:'LOGIN_FAILURE',LOGOUT:'LOGOUT',LOAD_USER_START:'LOAD_USER_START',LOAD_USER_SUCCESS:'LOAD_USER_SUCCESS',LOAD_USER_FAILURE:'LOAD_USER_FAILURE',UPDATE_USER:'UPDATE_USER',CLEAR_ERROR:'CLEAR_ERROR'};// Reducer\nconst authReducer=(state,action)=>{switch(action.type){case AUTH_ACTIONS.LOGIN_START:case AUTH_ACTIONS.LOAD_USER_START:return _objectSpread(_objectSpread({},state),{},{loading:true,error:null});case AUTH_ACTIONS.LOGIN_SUCCESS:return _objectSpread(_objectSpread({},state),{},{user:action.payload.user,token:action.payload.token,loading:false,error:null});case AUTH_ACTIONS.LOAD_USER_SUCCESS:return _objectSpread(_objectSpread({},state),{},{user:action.payload,loading:false,error:null});case AUTH_ACTIONS.LOGIN_FAILURE:case AUTH_ACTIONS.LOAD_USER_FAILURE:return _objectSpread(_objectSpread({},state),{},{user:null,token:null,loading:false,error:action.payload});case AUTH_ACTIONS.LOGOUT:return _objectSpread(_objectSpread({},state),{},{user:null,token:null,loading:false,error:null});case AUTH_ACTIONS.UPDATE_USER:return _objectSpread(_objectSpread({},state),{},{user:_objectSpread(_objectSpread({},state.user),action.payload)});case AUTH_ACTIONS.CLEAR_ERROR:return _objectSpread(_objectSpread({},state),{},{error:null});default:return state;}};// Create context\nconst AuthContext=/*#__PURE__*/createContext();// Auth Provider Component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);// Load user on app start\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){// Set token in API headers\nsetAuthToken(token);// Try to load user from backend\nloadUser();}else{dispatch({type:AUTH_ACTIONS.LOAD_USER_FAILURE,payload:'No token found'});}},[]);// Load user data\nconst loadUser=async()=>{dispatch({type:AUTH_ACTIONS.LOAD_USER_START});try{const response=await api.get('/auth/me');if(response.data.success){dispatch({type:AUTH_ACTIONS.LOAD_USER_SUCCESS,payload:response.data.data.user});}else{throw new Error(response.data.message||'Kullanıcı bilgileri alınamadı');}}catch(error){var _error$response,_error$response$data;console.error('Load user error:',error);dispatch({type:AUTH_ACTIONS.LOAD_USER_FAILURE,payload:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Kullanıcı bilgileri yüklenemedi'});// Remove invalid token\nremoveAuthToken();}};// Login function\nconst login=async credentials=>{dispatch({type:AUTH_ACTIONS.LOGIN_START});try{const response=await api.post('/auth/login',credentials);if(response.data.success){const{token,user}=response.data.data;// Store token and set in API headers\nlocalStorage.setItem('token',token);setAuthToken(token);dispatch({type:AUTH_ACTIONS.LOGIN_SUCCESS,payload:{user,token}});toast.success(\"Ho\\u015F geldiniz, \".concat(user.firstName||user.username,\"!\"));return{success:true};}else{throw new Error(response.data.message||'Giriş yapılamadı');}}catch(error){var _error$response2,_error$response2$data;console.error('Login error:',error);const errorMessage=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Giriş yapılamadı';dispatch({type:AUTH_ACTIONS.LOGIN_FAILURE,payload:errorMessage});toast.error(errorMessage);return{success:false,error:errorMessage};}};// Logout function\nconst logout=async()=>{try{// Call logout endpoint to invalidate token on server\nawait api.post('/auth/logout');}catch(error){console.error('Logout error:',error);}finally{// Always clear local state\nlocalStorage.removeItem('token');removeAuthToken();dispatch({type:AUTH_ACTIONS.LOGOUT});toast.success('Başarıyla çıkış yapıldı');}};// Update user profile\nconst updateProfile=async userData=>{try{const response=await api.put('/auth/profile',userData);const updatedUser=response.data.user;dispatch({type:AUTH_ACTIONS.UPDATE_USER,payload:updatedUser});toast.success('Profil başarıyla güncellendi');return{success:true,user:updatedUser};}catch(error){var _error$response3,_error$response3$data;console.error('Update profile error:',error);const errorMessage=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Profil güncellenemedi';toast.error(errorMessage);return{success:false,error:errorMessage};}};// Change password\nconst changePassword=async passwordData=>{try{await api.put('/auth/change-password',passwordData);toast.success('Şifre başarıyla değiştirildi');return{success:true};}catch(error){var _error$response4,_error$response4$data;console.error('Change password error:',error);const errorMessage=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||'Şifre değiştirilemedi';toast.error(errorMessage);return{success:false,error:errorMessage};}};// Clear error\nconst clearError=()=>{dispatch({type:AUTH_ACTIONS.CLEAR_ERROR});};// Check if user has required role\nconst hasRole=requiredRoles=>{if(!state.user||!requiredRoles)return false;if(Array.isArray(requiredRoles)){return requiredRoles.includes(state.user.role);}return state.user.role===requiredRoles;};// Check if user has permission\nconst hasPermission=permission=>{if(!state.user)return false;// Admin has all permissions\nif(state.user.role==='admin')return true;// Define role-based permissions\nconst rolePermissions={magaza_personeli:['orders.create','orders.read','orders.update','tasks.read','notifications.read','profile.update'],fabrika_iscisi:['tasks.read','tasks.update','orders.read','orders.update_status','notifications.read','profile.update']};const userPermissions=rolePermissions[state.user.role]||[];return userPermissions.includes(permission);};// Get user display name\nconst getUserDisplayName=()=>{if(!state.user)return'';return state.user.name||state.user.username||'Kullanıcı';};// Get user role display name\nconst getUserRoleDisplayName=()=>{if(!state.user)return'';const roleNames={admin:'İşletme Sahibi',magaza_personeli:'Mağaza Personeli',fabrika_iscisi:'Fabrika İşçisi'};return roleNames[state.user.role]||state.user.role;};const value={// State\nuser:state.user,token:state.token,loading:state.loading,error:state.error,isAuthenticated:!!state.user,// Actions\nlogin,logout,loadUser,updateProfile,changePassword,clearError,// Utilities\nhasRole,hasPermission,getUserDisplayName,getUserRoleDisplayName};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook to use auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","toast","api","setAuthToken","removeAuthToken","jsx","_jsx","initialState","user","token","localStorage","getItem","loading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_USER","CLEAR_ERROR","authReducer","state","action","type","_objectSpread","payload","AuthContext","AuthProvider","_ref","children","dispatch","loadUser","response","get","data","success","Error","message","_error$response","_error$response$data","console","login","credentials","post","setItem","concat","firstName","username","_error$response2","_error$response2$data","errorMessage","logout","removeItem","updateProfile","userData","put","updatedUser","_error$response3","_error$response3$data","changePassword","passwordData","_error$response4","_error$response4$data","clearError","hasRole","requiredRoles","Array","isArray","includes","role","hasPermission","permission","rolePermissions","magaza_personeli","fabrika_iscisi","userPermissions","getUserDisplayName","name","getUserRoleDisplayName","roleNames","admin","value","isAuthenticated","Provider","useAuth","context"],"sources":["/Users/hakankarahan/Desktop/fabrikayazilimi/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport api from '../services/api';\nimport { setAuthToken, removeAuthToken } from '../utils/auth';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null,\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload,\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null,\n      };\n\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload },\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null,\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load user on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      // Set token in API headers\n      setAuthToken(token);\n      // Try to load user from backend\n      loadUser();\n    } else {\n      dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: 'No token found' });\n    }\n  }, []);\n\n  // Load user data\n  const loadUser = async () => {\n    dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n    \n    try {\n      const response = await api.get('/auth/me');\n      if (response.data.success) {\n        dispatch({ \n          type: AUTH_ACTIONS.LOAD_USER_SUCCESS, \n          payload: response.data.data.user \n        });\n      } else {\n        throw new Error(response.data.message || 'Kullanıcı bilgileri alınamadı');\n      }\n    } catch (error) {\n      console.error('Load user error:', error);\n      dispatch({ \n        type: AUTH_ACTIONS.LOAD_USER_FAILURE, \n        payload: error.response?.data?.message || 'Kullanıcı bilgileri yüklenemedi' \n      });\n      // Remove invalid token\n      removeAuthToken();\n    }\n  };\n\n  // Login function\n  const login = async (credentials) => {\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n    \n    try {\n      const response = await api.post('/auth/login', credentials);\n      \n      if (response.data.success) {\n        const { token, user } = response.data.data;\n        \n        // Store token and set in API headers\n        localStorage.setItem('token', token);\n        setAuthToken(token);\n        \n        dispatch({ \n          type: AUTH_ACTIONS.LOGIN_SUCCESS, \n          payload: { user, token } \n        });\n        \n        toast.success(`Hoş geldiniz, ${user.firstName || user.username}!`);\n        return { success: true };\n      } else {\n        throw new Error(response.data.message || 'Giriş yapılamadı');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      const errorMessage = error.response?.data?.message || 'Giriş yapılamadı';\n      \n      dispatch({ \n        type: AUTH_ACTIONS.LOGIN_FAILURE, \n        payload: errorMessage \n      });\n      \n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint to invalidate token on server\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Always clear local state\n      localStorage.removeItem('token');\n      removeAuthToken();\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      toast.success('Başarıyla çıkış yapıldı');\n    }\n  };\n\n  // Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      const response = await api.put('/auth/profile', userData);\n      const updatedUser = response.data.user;\n      \n      dispatch({ \n        type: AUTH_ACTIONS.UPDATE_USER, \n        payload: updatedUser \n      });\n      \n      toast.success('Profil başarıyla güncellendi');\n      return { success: true, user: updatedUser };\n    } catch (error) {\n      console.error('Update profile error:', error);\n      const errorMessage = error.response?.data?.message || 'Profil güncellenemedi';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Change password\n  const changePassword = async (passwordData) => {\n    try {\n      await api.put('/auth/change-password', passwordData);\n      toast.success('Şifre başarıyla değiştirildi');\n      return { success: true };\n    } catch (error) {\n      console.error('Change password error:', error);\n      const errorMessage = error.response?.data?.message || 'Şifre değiştirilemedi';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Check if user has required role\n  const hasRole = (requiredRoles) => {\n    if (!state.user || !requiredRoles) return false;\n    if (Array.isArray(requiredRoles)) {\n      return requiredRoles.includes(state.user.role);\n    }\n    return state.user.role === requiredRoles;\n  };\n\n  // Check if user has permission\n  const hasPermission = (permission) => {\n    if (!state.user) return false;\n    \n    // Admin has all permissions\n    if (state.user.role === 'admin') return true;\n    \n    // Define role-based permissions\n    const rolePermissions = {\n      magaza_personeli: [\n        'orders.create',\n        'orders.read',\n        'orders.update',\n        'tasks.read',\n        'notifications.read',\n        'profile.update',\n      ],\n      fabrika_iscisi: [\n        'tasks.read',\n        'tasks.update',\n        'orders.read',\n        'orders.update_status',\n        'notifications.read',\n        'profile.update',\n      ],\n    };\n    \n    const userPermissions = rolePermissions[state.user.role] || [];\n    return userPermissions.includes(permission);\n  };\n\n  // Get user display name\n  const getUserDisplayName = () => {\n    if (!state.user) return '';\n    return state.user.name || state.user.username || 'Kullanıcı';\n  };\n\n  // Get user role display name\n  const getUserRoleDisplayName = () => {\n    if (!state.user) return '';\n    \n    const roleNames = {\n      admin: 'İşletme Sahibi',\n      magaza_personeli: 'Mağaza Personeli',\n      fabrika_iscisi: 'Fabrika İşçisi',\n    };\n    \n    return roleNames[state.user.role] || state.user.role;\n  };\n\n  const value = {\n    // State\n    user: state.user,\n    token: state.token,\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: !!state.user,\n    \n    // Actions\n    login,\n    logout,\n    loadUser,\n    updateProfile,\n    changePassword,\n    clearError,\n    \n    // Utilities\n    hasRole,\n    hasPermission,\n    getUserDisplayName,\n    getUserRoleDisplayName,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}