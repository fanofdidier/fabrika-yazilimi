{"version":3,"file":"static/js/587.f98fd6f4.chunk.js","mappings":"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","sources":["pages/Users/UsersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button, Input, Table, Badge, Alert, LoadingSpinner } from '../../components/UI';\n\n\nconst UsersPage = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const [message, setMessage] = useState({ type: '', text: '' });\n\n  // Mock users data\n  const mockUsers = [\n    {\n      id: 1,\n      firstName: 'Ahmet',\n      lastName: 'Yılmaz',\n      email: 'ahmet.yilmaz@fabrika.com',\n      role: 'admin',\n      department: 'Yönetim',\n      position: 'Fabrika Müdürü',\n      status: 'active',\n      lastLogin: '2024-01-15T10:30:00Z',\n      createdAt: '2023-06-01T09:00:00Z'\n    },\n    {\n      id: 2,\n      firstName: 'Fatma',\n      lastName: 'Demir',\n      email: 'fatma.demir@fabrika.com',\n      role: 'manager',\n      department: 'Üretim',\n      position: 'Üretim Müdürü',\n      status: 'active',\n      lastLogin: '2024-01-15T08:45:00Z',\n      createdAt: '2023-07-15T10:00:00Z'\n    },\n    {\n      id: 3,\n      firstName: 'Mehmet',\n      lastName: 'Kaya',\n      email: 'mehmet.kaya@fabrika.com',\n      role: 'employee',\n      department: 'Üretim',\n      position: 'Operatör',\n      status: 'active',\n      lastLogin: '2024-01-14T16:20:00Z',\n      createdAt: '2023-08-01T11:00:00Z'\n    },\n    {\n      id: 4,\n      firstName: 'Ayşe',\n      lastName: 'Özkan',\n      email: 'ayse.ozkan@fabrika.com',\n      role: 'employee',\n      department: 'Kalite Kontrol',\n      position: 'Kalite Uzmanı',\n      status: 'inactive',\n      lastLogin: '2024-01-10T14:15:00Z',\n      createdAt: '2023-09-10T12:00:00Z'\n    },\n    {\n      id: 5,\n      firstName: 'Ali',\n      lastName: 'Çelik',\n      email: 'ali.celik@fabrika.com',\n      role: 'employee',\n      department: 'Lojistik',\n      position: 'Depo Sorumlusu',\n      status: 'active',\n      lastLogin: '2024-01-15T07:30:00Z',\n      createdAt: '2023-10-05T13:00:00Z'\n    }\n  ];\n\n  useEffect(() => {\n    // Simulate API call\n    const fetchUsers = async () => {\n      setLoading(true);\n      try {\n        // Simulate network delay\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setUsers(mockUsers);\n      } catch (error) {\n        setMessage({ type: 'error', text: 'Kullanıcılar yüklenirken bir hata oluştu.' });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  // Filter users based on search term and role\n  const filteredUsers = users.filter(user => {\n    if (!user) return false;\n    const matchesSearch = \n      user.firstName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.lastName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.department?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.position?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesRole = filterRole === 'all' || user.role === filterRole;\n    \n    return matchesSearch && matchesRole;\n  });\n\n  const getRoleBadge = (role) => {\n    const roleConfig = {\n      admin: { variant: 'danger', label: 'Yönetici' },\n      manager: { variant: 'warning', label: 'Müdür' },\n      employee: { variant: 'primary', label: 'Çalışan' }\n    };\n    \n    const config = roleConfig[role] || { variant: 'secondary', label: role };\n    return <Badge variant={config.variant} size=\"sm\">{config.label}</Badge>;\n  };\n\n  const getStatusBadge = (status) => {\n    return (\n      <Badge \n        variant={status === 'active' ? 'success' : 'secondary'} \n        size=\"sm\"\n      >\n        {status === 'active' ? 'Aktif' : 'Pasif'}\n      </Badge>\n    );\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('tr-TR', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const handleUserAction = async (userId, action) => {\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      if (action === 'toggle_status') {\n        setUsers(prev => prev.map(user => \n          user.id === userId \n            ? { ...user, status: user.status === 'active' ? 'inactive' : 'active' }\n            : user\n        ));\n        setMessage({ type: 'success', text: 'Kullanıcı durumu güncellendi.' });\n      }\n    } catch (error) {\n      setMessage({ type: 'error', text: 'İşlem gerçekleştirilirken bir hata oluştu.' });\n    }\n  };\n\n  const tableColumns = [\n    {\n      key: 'name',\n      label: 'Ad Soyad',\n      render: (user) => (\n        <div>\n          <div className=\"font-medium text-gray-900\">\n            {user?.firstName || ''} {user?.lastName || ''}\n          </div>\n          <div className=\"text-sm text-gray-500\">{user?.email || '-'}</div>\n        </div>\n      )\n    },\n    {\n      key: 'role',\n      label: 'Rol',\n      render: (user) => getRoleBadge(user.role)\n    },\n    {\n      key: 'department',\n      label: 'Departman',\n      render: (user) => (\n        <div>\n          <div className=\"text-sm font-medium text-gray-900\">{user?.department || '-'}</div>\n          <div className=\"text-sm text-gray-500\">{user?.position || '-'}</div>\n        </div>\n      )\n    },\n    {\n      key: 'status',\n      label: 'Durum',\n      render: (user) => getStatusBadge(user.status)\n    },\n    {\n      key: 'lastLogin',\n      label: 'Son Giriş',\n      render: (user) => (\n        <div className=\"text-sm text-gray-900\">\n          {user?.lastLogin ? formatDate(user.lastLogin) : 'Hiç giriş yapmamış'}\n        </div>\n      )\n    },\n    {\n      key: 'actions',\n      label: 'İşlemler',\n      render: (user) => (\n        <div className=\"flex gap-2\">\n          <Link to={`/users/${user?.id || ''}`}>\n            <Button variant=\"outline\" size=\"sm\">\n              Detay\n            </Button>\n          </Link>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => handleUserAction(user?.id, 'toggle_status')}\n            className={user?.status === 'active' ? 'text-red-600 border-red-300 hover:bg-red-50' : 'text-green-600 border-green-300 hover:bg-green-50'}\n          >\n            {user?.status === 'active' ? 'Pasifleştir' : 'Aktifleştir'}\n          </Button>\n        </div>\n      )\n    }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" text=\"Kullanıcılar yükleniyor...\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Kullanıcı Yönetimi</h1>\n              <p className=\"text-gray-600 mt-1\">\n                Toplam {users.length} kullanıcı • {filteredUsers.length} sonuç gösteriliyor\n              </p>\n            </div>\n            <Button>\n              Yeni Kullanıcı Ekle\n            </Button>\n          </div>\n\n          {/* Alert Messages */}\n          {message.text && (\n            <div className=\"mb-4\">\n              <Alert variant={message.type} onClose={() => setMessage({ type: '', text: '' })}>\n                {message.text}\n              </Alert>\n            </div>\n          )}\n\n          {/* Filters */}\n          <div className=\"flex flex-col sm:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <Input\n                placeholder=\"Kullanıcı ara (ad, soyad, e-posta, departman...)\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full\"\n              />\n            </div>\n            <div className=\"w-full sm:w-48\">\n              <select\n                value={filterRole}\n                onChange={(e) => setFilterRole(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              >\n                <option value=\"all\">Tüm Roller</option>\n                <option value=\"admin\">Yönetici</option>\n                <option value=\"manager\">Müdür</option>\n                <option value=\"employee\">Çalışan</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        {/* Users Table */}\n        <Card>\n          {filteredUsers.length === 0 ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"text-gray-400 text-lg mb-2\">👥</div>\n              <p className=\"text-gray-600\">\n                {searchTerm || filterRole !== 'all' \n                  ? 'Arama kriterlerinize uygun kullanıcı bulunamadı.' \n                  : 'Henüz kullanıcı bulunmuyor.'}\n              </p>\n            </div>\n          ) : (\n            <Table\n              data={filteredUsers}\n              columns={tableColumns}\n              className=\"w-full\"\n            />\n          )}\n        </Card>\n    </div>\n  );\n};\n\nexport default UsersPage;"],"names":["UsersPage","users","setUsers","useState","loading","setLoading","searchTerm","setSearchTerm","filterRole","setFilterRole","message","setMessage","type","text","mockUsers","id","firstName","lastName","email","role","department","position","status","lastLogin","createdAt","useEffect","async","Promise","resolve","setTimeout","error","fetchUsers","filteredUsers","filter","user","_user$firstName","_user$lastName","_user$email","_user$department","_user$position","matchesSearch","toLowerCase","includes","matchesRole","tableColumns","key","label","render","_jsxs","children","className","_jsx","config","admin","variant","manager","employee","Badge","size","getRoleBadge","getStatusBadge","dateString","Date","toLocaleDateString","year","month","day","hour","minute","Link","to","concat","Button","onClick","userId","action","prev","map","_objectSpread","handleUserAction","LoadingSpinner","length","Alert","onClose","Input","placeholder","value","onChange","e","target","Card","Table","data","columns"],"sourceRoot":""}