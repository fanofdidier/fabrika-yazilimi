{"version":3,"file":"static/js/635.853b0746.chunk.js","mappings":"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","sources":["pages/Users/UserDetailPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Card, Button, Badge, Alert, LoadingSpinner, Input } from '../../components/UI';\n\n\nconst UserDetailPage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isEditing, setIsEditing] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [formData, setFormData] = useState({});\n\n  // Mock user data\n  const mockUsers = {\n    1: {\n      id: 1,\n      firstName: 'Ahmet',\n      lastName: 'Yılmaz',\n      email: 'ahmet.yilmaz@fabrika.com',\n      phone: '+90 532 123 4567',\n      role: 'admin',\n      department: 'Yönetim',\n      position: 'Fabrika Müdürü',\n      status: 'active',\n      lastLogin: '2024-01-15T10:30:00Z',\n      createdAt: '2023-06-01T09:00:00Z',\n      address: 'İstanbul, Türkiye',\n      emergencyContact: '+90 532 987 6543',\n      startDate: '2023-06-01',\n      salary: '15000',\n      notes: 'Fabrika müdürü olarak tüm operasyonlardan sorumlu.'\n    },\n    2: {\n      id: 2,\n      firstName: 'Fatma',\n      lastName: 'Demir',\n      email: 'fatma.demir@fabrika.com',\n      phone: '+90 533 234 5678',\n      role: 'manager',\n      department: 'Üretim',\n      position: 'Üretim Müdürü',\n      status: 'active',\n      lastLogin: '2024-01-15T08:45:00Z',\n      createdAt: '2023-07-15T10:00:00Z',\n      address: 'Ankara, Türkiye',\n      emergencyContact: '+90 533 876 5432',\n      startDate: '2023-07-15',\n      salary: '12000',\n      notes: 'Üretim süreçlerinin yönetiminden sorumlu.'\n    },\n    3: {\n      id: 3,\n      firstName: 'Mehmet',\n      lastName: 'Kaya',\n      email: 'mehmet.kaya@fabrika.com',\n      phone: '+90 534 345 6789',\n      role: 'employee',\n      department: 'Üretim',\n      position: 'Operatör',\n      status: 'active',\n      lastLogin: '2024-01-14T16:20:00Z',\n      createdAt: '2023-08-01T11:00:00Z',\n      address: 'İzmir, Türkiye',\n      emergencyContact: '+90 534 765 4321',\n      startDate: '2023-08-01',\n      salary: '8000',\n      notes: 'Deneyimli makine operatörü.'\n    }\n  };\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setLoading(true);\n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        \n        const userData = mockUsers[id];\n        if (userData) {\n          setUser(userData);\n          setFormData(userData);\n        } else {\n          setMessage({ type: 'error', text: 'Kullanıcı bulunamadı.' });\n        }\n      } catch (error) {\n        setMessage({ type: 'error', text: 'Kullanıcı bilgileri yüklenirken bir hata oluştu.' });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, [id]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSave = async () => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setUser(formData);\n      setIsEditing(false);\n      setMessage({ type: 'success', text: 'Kullanıcı bilgileri başarıyla güncellendi.' });\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Kullanıcı bilgileri güncellenirken bir hata oluştu.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setFormData(user);\n    setIsEditing(false);\n  };\n\n  const handleStatusToggle = async () => {\n    setLoading(true);\n    try {\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const newStatus = user.status === 'active' ? 'inactive' : 'active';\n      const updatedUser = { ...user, status: newStatus };\n      setUser(updatedUser);\n      setFormData(updatedUser);\n      setMessage({ \n        type: 'success', \n        text: `Kullanıcı ${newStatus === 'active' ? 'aktifleştirildi' : 'pasifleştirildi'}.` \n      });\n    } catch (error) {\n      setMessage({ type: 'error', text: 'Kullanıcı durumu güncellenirken bir hata oluştu.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getRoleBadge = (role) => {\n    const roleConfig = {\n      admin: { variant: 'danger', label: 'Yönetici' },\n      manager: { variant: 'warning', label: 'Müdür' },\n      employee: { variant: 'primary', label: 'Çalışan' }\n    };\n    \n    const config = roleConfig[role] || { variant: 'secondary', label: role };\n    return <Badge variant={config.variant}>{config.label}</Badge>;\n  };\n\n  const getStatusBadge = (status) => {\n    return (\n      <Badge variant={status === 'active' ? 'success' : 'secondary'}>\n        {status === 'active' ? 'Aktif' : 'Pasif'}\n      </Badge>\n    );\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('tr-TR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (loading && !user) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" text=\"Kullanıcı bilgileri yükleniyor...\" />\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <Alert variant=\"error\">\n          Kullanıcı bulunamadı.\n        </Alert>\n        <div className=\"mt-4\">\n          <Button onClick={() => navigate('/users')}>Kullanıcı Listesine Dön</Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                {user.firstName} {user.lastName}\n              </h1>\n              <p className=\"text-gray-600 mt-1\">{user.email}</p>\n            </div>\n            <div className=\"flex gap-2\">\n              <Button\n                variant=\"outline\"\n                onClick={() => navigate('/users')}\n              >\n                Geri Dön\n              </Button>\n              {!isEditing && (\n                <Button\n                  onClick={() => setIsEditing(true)}\n                >\n                  Düzenle\n                </Button>\n              )}\n            </div>\n          </div>\n\n          {/* Status and Role */}\n          <div className=\"flex gap-3\">\n            {getRoleBadge(user.role)}\n            {getStatusBadge(user.status)}\n          </div>\n        </div>\n\n        {/* Alert Messages */}\n        {message.text && (\n          <div className=\"mb-6\">\n            <Alert variant={message.type} onClose={() => setMessage({ type: '', text: '' })}>\n              {message.text}\n            </Alert>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Personal Information */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Kişisel Bilgiler</h2>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Input\n                  label=\"Ad\"\n                  name=\"firstName\"\n                  value={formData.firstName || ''}\n                  onChange={handleInputChange}\n                  disabled={!isEditing}\n                />\n                <Input\n                  label=\"Soyad\"\n                  name=\"lastName\"\n                  value={formData.lastName || ''}\n                  onChange={handleInputChange}\n                  disabled={!isEditing}\n                />\n              </div>\n              \n              <Input\n                label=\"E-posta\"\n                name=\"email\"\n                type=\"email\"\n                value={formData.email || ''}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n              \n              <Input\n                label=\"Telefon\"\n                name=\"phone\"\n                value={formData.phone || ''}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n              \n              <Input\n                label=\"Adres\"\n                name=\"address\"\n                value={formData.address || ''}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n              \n              <Input\n                label=\"Acil Durum İletişim\"\n                name=\"emergencyContact\"\n                value={formData.emergencyContact || ''}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n            </div>\n          </Card>\n\n          {/* Work Information */}\n          <Card className=\"p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">İş Bilgileri</h2>\n            <div className=\"space-y-4\">\n              <Input\n                label=\"Departman\"\n                name=\"department\"\n                value={formData.department || ''}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n              \n              <Input\n                label=\"Pozisyon\"\n                name=\"position\"\n                value={formData.position || ''}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Rol\n                  </label>\n                  <select\n                    name=\"role\"\n                    value={formData.role || ''}\n                    onChange={handleInputChange}\n                    disabled={!isEditing}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 disabled:bg-gray-100\"\n                  >\n                    <option value=\"employee\">Çalışan</option>\n                    <option value=\"manager\">Müdür</option>\n                    <option value=\"admin\">Yönetici</option>\n                  </select>\n                </div>\n                \n                <Input\n                  label=\"İşe Başlama Tarihi\"\n                  name=\"startDate\"\n                  type=\"date\"\n                  value={formData.startDate || ''}\n                  onChange={handleInputChange}\n                  disabled={!isEditing}\n                />\n              </div>\n              \n              <Input\n                label=\"Maaş\"\n                name=\"salary\"\n                value={formData.salary || ''}\n                onChange={handleInputChange}\n                disabled={!isEditing}\n              />\n            </div>\n          </Card>\n        </div>\n\n        {/* Notes */}\n        <Card className=\"p-6 mt-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Notlar</h2>\n          <textarea\n            name=\"notes\"\n            value={formData.notes || ''}\n            onChange={handleInputChange}\n            disabled={!isEditing}\n            rows={4}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 disabled:bg-gray-100\"\n            placeholder=\"Kullanıcı hakkında notlar...\"\n          />\n        </Card>\n\n        {/* System Information */}\n        <Card className=\"p-6 mt-6\">\n          <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Sistem Bilgileri</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Kullanıcı ID:</span>\n              <span className=\"ml-2 font-mono\">{user.id}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Kayıt Tarihi:</span>\n              <span className=\"ml-2\">{formatDate(user.createdAt)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Son Giriş:</span>\n              <span className=\"ml-2\">{formatDate(user.lastLogin)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Durum:</span>\n              <span className=\"ml-2\">{getStatusBadge(user.status)}</span>\n            </div>\n          </div>\n        </Card>\n\n        {/* Action Buttons */}\n        {isEditing ? (\n          <div className=\"flex gap-3 mt-6\">\n            <Button\n              onClick={handleSave}\n              loading={loading}\n              disabled={loading}\n            >\n              Kaydet\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={handleCancel}\n              disabled={loading}\n            >\n              İptal\n            </Button>\n          </div>\n        ) : (\n          <div className=\"flex gap-3 mt-6\">\n            <Button\n              variant={user.status === 'active' ? 'danger' : 'success'}\n              onClick={handleStatusToggle}\n              loading={loading}\n              disabled={loading}\n            >\n              {user.status === 'active' ? 'Pasifleştir' : 'Aktifleştir'}\n            </Button>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default UserDetailPage;"],"names":["UserDetailPage","id","useParams","navigate","useNavigate","user","setUser","useState","loading","setLoading","isEditing","setIsEditing","message","setMessage","type","text","formData","setFormData","mockUsers","firstName","lastName","email","phone","role","department","position","status","lastLogin","createdAt","address","emergencyContact","startDate","salary","notes","useEffect","async","Promise","resolve","setTimeout","userData","error","fetchUser","handleInputChange","e","name","value","target","prev","_objectSpread","getStatusBadge","_jsx","Badge","variant","children","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","className","LoadingSpinner","size","_jsxs","Button","onClick","config","admin","label","manager","employee","getRoleBadge","Alert","onClose","Card","Input","onChange","disabled","rows","placeholder","handleCancel","newStatus","updatedUser","concat"],"sourceRoot":""}