{"version":3,"file":"static/js/954.87c764bd.chunk.js","mappings":"mNAKA,MAsOA,EAtOuBA,KACrB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,CAAEG,KAAM,GAAIC,KAAM,MAClDC,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,CACvCO,MAAO,GACPC,YAAa,GACbC,SAAU,SACVC,OAAQ,UACRC,WAAY,GACZC,QAAS,GACTC,SAAU,GACVC,KAAM,KA0BFC,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1Bb,EAAYc,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXD,GAAI,IACP,CAACH,GAAOC,MAsCZ,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAElCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,gCACjDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAC,6DAInCvB,EAAQG,OACPqB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,QAAS1B,EAAQE,KAAMyB,QAASA,IAAM1B,EAAW,CAAEC,KAAM,GAAIC,KAAM,KAAMoB,SAC7EvB,EAAQG,UAKfqB,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACN,UAAU,MAAKC,UACnBF,EAAAA,EAAAA,MAAA,QAAMQ,SApDOC,UACnBf,EAAEgB,iBACFjC,GAAW,GACXG,EAAW,CAAEC,KAAM,GAAIC,KAAM,KAE7B,KAEgBiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACThB,GAAQ,IACXS,KAAMT,EAASS,KAAKmB,MAAM,KAAKC,IAAIC,GAAOA,EAAIC,QAAQC,OAAOF,GAAOA,GACpEG,WAAW,IAAIC,MAAOC,cACtBC,WAAW,IAAIF,MAAOC,sBAIlB,IAAIE,QAAQC,GAAWC,WAAWD,EAAS,MAEjDzC,EAAW,CAAEC,KAAM,UAAWC,KAAM,mDAGpCwC,WAAW,KACThD,EAAS,WACR,KACL,CAAE,MAAOiD,GACP3C,EAAW,CAAEC,KAAM,QAASC,KAAMyC,EAAM5C,SAAW,sDACrD,CAAC,QACCF,GAAW,EACb,GAyBmCyB,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EAExBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,oBACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,MAAM,uCACN9B,KAAK,QACLC,MAAOb,EAASE,MAChByC,SAAUjC,EACVkC,UAAQ,EACRC,YAAY,uDAGdzB,EAAAA,EAAAA,KAAC0B,EAAAA,GAAQ,CACPJ,MAAM,mBACN9B,KAAK,cACLC,MAAOb,EAASG,YAChBwC,SAAUjC,EACVqC,KAAM,EACNF,YAAY,2DAGdzB,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,MAAM,WACN9B,KAAK,WACLC,MAAOb,EAASQ,SAChBmC,SAAUjC,EACVmC,YAAY,+BAMlB5B,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,6BACvDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,gBAGhEC,EAAAA,EAAAA,KAAA,UACER,KAAK,WACLC,MAAOb,EAASI,SAChBuC,SAAUjC,EACVQ,UAAU,qIAAoIC,SAjI1I,CACtB,CAAEN,MAAO,MAAO6B,MAAO,oBACvB,CAAE7B,MAAO,SAAU6B,MAAO,QAC1B,CAAE7B,MAAO,OAAQ6B,MAAO,aACxB,CAAE7B,MAAO,SAAU6B,MAAO,SA+HSb,IAAImB,IACnB5B,EAAAA,EAAAA,KAAA,UAA2BP,MAAOmC,EAAOnC,MAAMM,SAC5C6B,EAAON,OADGM,EAAOnC,cAO1BI,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,+CAA8CC,SAAC,WAGhEC,EAAAA,EAAAA,KAAA,UACER,KAAK,SACLC,MAAOb,EAASK,OAChBsC,SAAUjC,EACVQ,UAAU,qIAAoIC,SA5I5I,CACpB,CAAEN,MAAO,UAAW6B,MAAO,aAC3B,CAAE7B,MAAO,cAAe6B,MAAO,gBAC/B,CAAE7B,MAAO,YAAa6B,MAAO,mBAC7B,CAAE7B,MAAO,YAAa6B,MAAO,sBA0IIb,IAAImB,IACjB5B,EAAAA,EAAAA,KAAA,UAA2BP,MAAOmC,EAAOnC,MAAMM,SAC5C6B,EAAON,OADGM,EAAOnC,cAO1BO,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,MAAM,mBACN9B,KAAK,aACLC,MAAOb,EAASM,WAChBqC,SAAUjC,EACVmC,YAAY,yCAGdzB,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,MAAM,oBACN9B,KAAK,UACLd,KAAK,iBACLe,MAAOb,EAASO,QAChBoC,SAAUjC,WAMhBO,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yCAAwCC,SAAC,iBACvDC,EAAAA,EAAAA,KAACqB,EAAAA,GAAK,CACJC,MAAM,YACN9B,KAAK,OACLC,MAAOb,EAASS,KAChBkC,SAAUjC,EACVmC,YAAY,4EACZI,WAAW,mEAMjBhC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAC5DC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACLpD,KAAK,SACLL,QAASA,EACT0D,SAAU1D,IAAYO,EAASE,MAC/BgB,UAAU,sBAAqBC,SAChC,4BAGDC,EAAAA,EAAAA,KAAC8B,EAAAA,GAAM,CACLpD,KAAK,SACLwB,QAAQ,UACR8B,QA7IOC,KACnB9D,EAAS,WA6IG4D,SAAU1D,EACVyB,UAAU,sBAAqBC,SAChC,0B","sources":["pages/Tasks/CreateTaskPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Button, Input, Textarea, Select, Alert } from '../../components/UI';\n\n\nconst CreateTaskPage = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({ type: '', text: '' });\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    priority: 'medium',\n    status: 'pending',\n    assignedTo: '',\n    dueDate: '',\n    category: '',\n    tags: ''\n  });\n\n  const priorityOptions = [\n    { value: 'low', label: 'Düşük' },\n    { value: 'medium', label: 'Orta' },\n    { value: 'high', label: 'Yüksek' },\n    { value: 'urgent', label: 'Acil' }\n  ];\n\n  const statusOptions = [\n    { value: 'pending', label: 'Beklemede' },\n    { value: 'in_progress', label: 'Devam Ediyor' },\n    { value: 'completed', label: 'Tamamlandı' },\n    { value: 'cancelled', label: 'İptal Edildi' }\n  ];\n\n  const categoryOptions = [\n    { value: 'production', label: 'Üretim' },\n    { value: 'quality', label: 'Kalite Kontrol' },\n    { value: 'maintenance', label: 'Bakım' },\n    { value: 'logistics', label: 'Lojistik' },\n    { value: 'administration', label: 'Yönetim' },\n    { value: 'other', label: 'Diğer' }\n  ];\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage({ type: '', text: '' });\n\n    try {\n      // API call to create task\n      const taskData = {\n        ...formData,\n        tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setMessage({ type: 'success', text: 'Görev başarıyla oluşturuldu!' });\n      \n      // Redirect to tasks page after success\n      setTimeout(() => {\n        navigate('/tasks');\n      }, 1500);\n    } catch (error) {\n      setMessage({ type: 'error', text: error.message || 'Görev oluşturulurken bir hata oluştu.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    navigate('/tasks');\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <h1 className=\"text-2xl font-bold text-gray-900\">Yeni Görev Oluştur</h1>\n          <p className=\"text-gray-600 mt-1\">Yeni bir görev tanımlayın ve atayın</p>\n        </div>\n\n        {/* Alert Messages */}\n        {message.text && (\n          <div className=\"mb-6\">\n            <Alert variant={message.type} onClose={() => setMessage({ type: '', text: '' })}>\n              {message.text}\n            </Alert>\n          </div>\n        )}\n\n        <Card className=\"p-6\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"space-y-6\">\n              {/* Basic Information */}\n              <div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Temel Bilgiler</h3>\n                <div className=\"space-y-4\">\n                  <Input\n                    label=\"Görev Başlığı\"\n                    name=\"title\"\n                    value={formData.title}\n                    onChange={handleInputChange}\n                    required\n                    placeholder=\"Görev başlığını girin\"\n                  />\n                  \n                  <Textarea\n                    label=\"Açıklama\"\n                    name=\"description\"\n                    value={formData.description}\n                    onChange={handleInputChange}\n                    rows={4}\n                    placeholder=\"Görev detaylarını açıklayın\"\n                  />\n                  \n                  <Input\n                    label=\"Kategori\"\n                    name=\"category\"\n                    value={formData.category}\n                    onChange={handleInputChange}\n                    placeholder=\"Görev kategorisi\"\n                  />\n                </div>\n              </div>\n\n              {/* Task Details */}\n              <div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Görev Detayları</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Öncelik\n                    </label>\n                    <select\n                      name=\"priority\"\n                      value={formData.priority}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    >\n                      {priorityOptions.map(option => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Durum\n                    </label>\n                    <select\n                      name=\"status\"\n                      value={formData.status}\n                      onChange={handleInputChange}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                    >\n                      {statusOptions.map(option => (\n                        <option key={option.value} value={option.value}>\n                          {option.label}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  \n                  <Input\n                    label=\"Atanan Kişi\"\n                    name=\"assignedTo\"\n                    value={formData.assignedTo}\n                    onChange={handleInputChange}\n                    placeholder=\"Kullanıcı ID veya e-posta\"\n                  />\n                  \n                  <Input\n                    label=\"Bitiş Tarihi\"\n                    name=\"dueDate\"\n                    type=\"datetime-local\"\n                    value={formData.dueDate}\n                    onChange={handleInputChange}\n                  />\n                </div>\n              </div>\n\n              {/* Additional Information */}\n              <div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Ek Bilgiler</h3>\n                <Input\n                  label=\"Etiketler\"\n                  name=\"tags\"\n                  value={formData.tags}\n                  onChange={handleInputChange}\n                  placeholder=\"Etiketleri virgülle ayırın (örn: üretim, kalite, acil)\"\n                  helperText=\"Görevleri kategorize etmek için etiketler ekleyin\"\n                />\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex gap-4 mt-8 pt-6 border-t border-gray-200\">\n              <Button\n                type=\"submit\"\n                loading={loading}\n                disabled={loading || !formData.title}\n                className=\"flex-1 md:flex-none\"\n              >\n                Görevi Oluştur\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={handleCancel}\n                disabled={loading}\n                className=\"flex-1 md:flex-none\"\n              >\n                İptal\n              </Button>\n            </div>\n          </form>\n        </Card>\n    </div>\n  );\n};\n\nexport default CreateTaskPage;"],"names":["CreateTaskPage","navigate","useNavigate","loading","setLoading","useState","message","setMessage","type","text","formData","setFormData","title","description","priority","status","assignedTo","dueDate","category","tags","handleInputChange","e","name","value","target","prev","_objectSpread","_jsxs","className","children","_jsx","Alert","variant","onClose","Card","onSubmit","async","preventDefault","split","map","tag","trim","filter","createdAt","Date","toISOString","updatedAt","Promise","resolve","setTimeout","error","Input","label","onChange","required","placeholder","Textarea","rows","option","helperText","Button","disabled","onClick","handleCancel"],"sourceRoot":""}