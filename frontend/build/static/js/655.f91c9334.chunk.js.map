{"version":3,"file":"static/js/655.f91c9334.chunk.js","mappings":"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","sources":["pages/Dashboard/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button, Badge, LoadingSpinner } from '../../components/UI';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useNotification } from '../../contexts/NotificationContext';\n\nconst DashboardPage = () => {\n  const { user } = useAuth();\n  const { notifications } = useNotification();\n  const [loading, setLoading] = useState(true);\n  const [stats, setStats] = useState({\n    totalOrders: 0,\n    pendingTasks: 0,\n    activeUsers: 0,\n    completedOrders: 0\n  });\n\n  useEffect(() => {\n    // Simulate loading dashboard data\n    const loadDashboardData = async () => {\n      setLoading(true);\n      try {\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        setStats({\n          totalOrders: 156,\n          pendingTasks: 23,\n          activeUsers: 45,\n          completedOrders: 134\n        });\n      } catch (error) {\n        console.error('Dashboard data loading error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadDashboardData();\n  }, []);\n\n  const unreadNotifications = (notifications || []).filter(n => !n.read).length;\n\n  const quickStats = [\n    {\n      title: 'Toplam Siparişler',\n      value: stats.totalOrders,\n      icon: '📦',\n      color: 'bg-blue-500',\n      link: '/orders'\n    },\n    {\n      title: 'Bekleyen Görevler',\n      value: stats.pendingTasks,\n      icon: '📋',\n      color: 'bg-yellow-500',\n      link: '/tasks'\n    },\n    {\n      title: 'Aktif Kullanıcılar',\n      value: stats.activeUsers,\n      icon: '👥',\n      color: 'bg-green-500',\n      link: '/users'\n    },\n    {\n      title: 'Tamamlanan Siparişler',\n      value: stats.completedOrders,\n      icon: '✅',\n      color: 'bg-purple-500',\n      link: '/orders'\n    }\n  ];\n\n  const recentActivities = [\n    {\n      id: 1,\n      type: 'order',\n      title: 'Yeni sipariş oluşturuldu',\n      description: 'Sipariş #1234 - ABC Şirketi',\n      time: '5 dakika önce',\n      icon: '📦'\n    },\n    {\n      id: 2,\n      type: 'task',\n      title: 'Görev tamamlandı',\n      description: 'Kalite kontrol görevi - Mehmet Kaya',\n      time: '15 dakika önce',\n      icon: '✅'\n    },\n    {\n      id: 3,\n      type: 'user',\n      title: 'Yeni kullanıcı kaydı',\n      description: 'Ali Çelik sisteme katıldı',\n      time: '1 saat önce',\n      icon: '👤'\n    },\n    {\n      id: 4,\n      type: 'system',\n      title: 'Sistem güncellemesi',\n      description: 'Bildirim sistemi güncellendi',\n      time: '2 saat önce',\n      icon: '⚙️'\n    }\n  ];\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" text=\"Dashboard yükleniyor...\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n        {/* Welcome Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">\n            Hoş geldiniz, {user?.firstName || 'Kullanıcı'}!\n          </h1>\n          <p className=\"text-gray-600 mt-2\">\n            Fabrika yönetim sistemi ana sayfası\n          </p>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {quickStats.map((stat, index) => (\n            <Link key={index} to={stat.link}>\n              <Card className=\"p-6 hover:shadow-lg transition-shadow duration-200 cursor-pointer\">\n                <div className=\"flex items-center\">\n                  <div className={`p-3 rounded-full ${stat.color} text-white text-2xl mr-4`}>\n                    {stat.icon}\n                  </div>\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">{stat.title}</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{stat.value}</p>\n                  </div>\n                </div>\n              </Card>\n            </Link>\n          ))}\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Recent Activities */}\n          <Card className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Son Aktiviteler</h2>\n              <Button variant=\"outline\" size=\"sm\">\n                Tümünü Gör\n              </Button>\n            </div>\n            <div className=\"space-y-4\">\n              {recentActivities.map((activity) => (\n                <div key={activity.id} className=\"flex items-start space-x-3 p-3 rounded-lg hover:bg-gray-50\">\n                  <div className=\"text-2xl\">{activity.icon}</div>\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-900\">\n                      {activity.title}\n                    </p>\n                    <p className=\"text-sm text-gray-600\">\n                      {activity.description}\n                    </p>\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      {activity.time}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Card>\n\n          {/* Notifications Summary */}\n          <Card className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Bildirimler</h2>\n              <Link to=\"/notifications\">\n                <Button variant=\"outline\" size=\"sm\">\n                  Tümünü Gör\n                </Button>\n              </Link>\n            </div>\n            \n            {unreadNotifications > 0 ? (\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"text-2xl\">📢</div>\n                    <div>\n                      <p className=\"font-medium text-gray-900\">\n                        {unreadNotifications} okunmamış bildirim\n                      </p>\n                      <p className=\"text-sm text-gray-600\">\n                        Yeni bildirimlerinizi kontrol edin\n                      </p>\n                    </div>\n                  </div>\n                  <Badge variant=\"primary\">{unreadNotifications}</Badge>\n                </div>\n                \n                {/* Show recent notifications */}\n                <div className=\"space-y-2\">\n                  {(notifications || []).slice(0, 3).map((notification) => (\n                    <div key={notification.id} className=\"flex items-center space-x-3 p-2 rounded hover:bg-gray-50\">\n                      <div className=\"text-lg\">\n                        {notification.type === 'order' ? '📦' : \n                         notification.type === 'task' ? '📋' : \n                         notification.type === 'system' ? '⚙️' : '📢'}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium text-gray-900 truncate\">\n                          {notification.title}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">\n                          {new Date(notification.timestamp).toLocaleDateString('tr-TR')}\n                        </p>\n                      </div>\n                      {!notification.read && (\n                        <Badge variant=\"primary\" size=\"sm\">Yeni</Badge>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <div className=\"text-4xl mb-4\">📭</div>\n                <p className=\"text-gray-600\">Tüm bildirimler okundu</p>\n              </div>\n            )}\n          </Card>\n        </div>\n\n        {/* Quick Actions */}\n        <Card className=\"p-6 mt-8\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Hızlı İşlemler</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Link to=\"/orders/create\">\n              <Button className=\"w-full\" variant=\"primary\">\n                📦 Yeni Sipariş Oluştur\n              </Button>\n            </Link>\n            <Link to=\"/tasks/create\">\n              <Button className=\"w-full\" variant=\"outline\">\n                📋 Yeni Görev Ekle\n              </Button>\n            </Link>\n            <Link to=\"/users\">\n              <Button className=\"w-full\" variant=\"outline\">\n                👥 Kullanıcı Yönetimi\n              </Button>\n            </Link>\n          </div>\n        </Card>\n    </div>\n  );\n};\n\nexport default DashboardPage;"],"names":["DashboardPage","user","useAuth","notifications","useNotification","loading","setLoading","useState","stats","setStats","totalOrders","pendingTasks","activeUsers","completedOrders","useEffect","async","Promise","resolve","setTimeout","error","console","loadDashboardData","unreadNotifications","filter","n","read","length","quickStats","title","value","icon","color","link","_jsx","className","children","LoadingSpinner","size","text","_jsxs","firstName","map","stat","index","Link","to","Card","concat","Button","variant","id","type","description","time","activity","Badge","slice","notification","Date","timestamp","toLocaleDateString"],"sourceRoot":""}