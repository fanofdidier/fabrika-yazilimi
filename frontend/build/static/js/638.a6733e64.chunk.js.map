{"version":3,"file":"static/js/638.a6733e64.chunk.js","mappings":"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","sources":["../node_modules/@capacitor/core/build/platforms.js","../node_modules/@capacitor/core/build/util.js","../node_modules/@capacitor/core/build/runtime.js","../node_modules/@capacitor/core/build/global.js","../node_modules/@capacitor/core/build/web-plugin.js","../node_modules/@capacitor/core/build/core-plugins.js","../node_modules/@capacitor/network/src/index.ts"],"sourcesContent":["const createCapacitorPlatforms = (win) => {\n    const defaultPlatformMap = new Map();\n    defaultPlatformMap.set('web', { name: 'web' });\n    const capPlatforms = win.CapacitorPlatforms || {\n        currentPlatform: { name: 'web' },\n        platforms: defaultPlatformMap,\n    };\n    const addPlatform = (name, platform) => {\n        capPlatforms.platforms.set(name, platform);\n    };\n    const setPlatform = (name) => {\n        if (capPlatforms.platforms.has(name)) {\n            capPlatforms.currentPlatform = capPlatforms.platforms.get(name);\n        }\n    };\n    capPlatforms.addPlatform = addPlatform;\n    capPlatforms.setPlatform = setPlatform;\n    return capPlatforms;\n};\nconst initPlatforms = (win) => (win.CapacitorPlatforms = createCapacitorPlatforms(win));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const CapacitorPlatforms = /*#__PURE__*/ initPlatforms((typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {}));\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const addPlatform = CapacitorPlatforms.addPlatform;\n/**\n * @deprecated Set `CapacitorCustomPlatform` on the window object prior to runtime executing in the web app instead\n */\nexport const setPlatform = CapacitorPlatforms.setPlatform;\n//# sourceMappingURL=platforms.js.map","export var ExceptionCode;\n(function (ExceptionCode) {\n    /**\n     * API is not implemented.\n     *\n     * This usually means the API can't be used because it is not implemented for\n     * the current platform.\n     */\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\n    /**\n     * API is not available.\n     *\n     * This means the API can't be used right now because:\n     *   - it is currently missing a prerequisite, such as network connectivity\n     *   - it requires a particular platform or browser version\n     */\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\n})(ExceptionCode || (ExceptionCode = {}));\nexport class CapacitorException extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.message = message;\n        this.code = code;\n        this.data = data;\n    }\n}\nexport const getPlatformId = (win) => {\n    var _a, _b;\n    if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n        return 'android';\n    }\n    else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n        return 'ios';\n    }\n    else {\n        return 'web';\n    }\n};\n//# sourceMappingURL=util.js.map","import { CapacitorException, getPlatformId, ExceptionCode } from './util';\nexport const createCapacitor = (win) => {\n    var _a, _b, _c, _d, _e;\n    const capCustomPlatform = win.CapacitorCustomPlatform || null;\n    const cap = win.Capacitor || {};\n    const Plugins = (cap.Plugins = cap.Plugins || {});\n    /**\n     * @deprecated Use `capCustomPlatform` instead, default functions like registerPlugin will function with the new object.\n     */\n    const capPlatforms = win.CapacitorPlatforms;\n    const defaultGetPlatform = () => {\n        return capCustomPlatform !== null\n            ? capCustomPlatform.name\n            : getPlatformId(win);\n    };\n    const getPlatform = ((_a = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _a === void 0 ? void 0 : _a.getPlatform) || defaultGetPlatform;\n    const defaultIsNativePlatform = () => getPlatform() !== 'web';\n    const isNativePlatform = ((_b = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _b === void 0 ? void 0 : _b.isNativePlatform) || defaultIsNativePlatform;\n    const defaultIsPluginAvailable = (pluginName) => {\n        const plugin = registeredPlugins.get(pluginName);\n        if (plugin === null || plugin === void 0 ? void 0 : plugin.platforms.has(getPlatform())) {\n            // JS implementation available for the current platform.\n            return true;\n        }\n        if (getPluginHeader(pluginName)) {\n            // Native implementation available.\n            return true;\n        }\n        return false;\n    };\n    const isPluginAvailable = ((_c = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _c === void 0 ? void 0 : _c.isPluginAvailable) ||\n        defaultIsPluginAvailable;\n    const defaultGetPluginHeader = (pluginName) => { var _a; return (_a = cap.PluginHeaders) === null || _a === void 0 ? void 0 : _a.find(h => h.name === pluginName); };\n    const getPluginHeader = ((_d = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _d === void 0 ? void 0 : _d.getPluginHeader) || defaultGetPluginHeader;\n    const handleError = (err) => win.console.error(err);\n    const pluginMethodNoop = (_target, prop, pluginName) => {\n        return Promise.reject(`${pluginName} does not have an implementation of \"${prop}\".`);\n    };\n    const registeredPlugins = new Map();\n    const defaultRegisterPlugin = (pluginName, jsImplementations = {}) => {\n        const registeredPlugin = registeredPlugins.get(pluginName);\n        if (registeredPlugin) {\n            console.warn(`Capacitor plugin \"${pluginName}\" already registered. Cannot register plugins twice.`);\n            return registeredPlugin.proxy;\n        }\n        const platform = getPlatform();\n        const pluginHeader = getPluginHeader(pluginName);\n        let jsImplementation;\n        const loadPluginImplementation = async () => {\n            if (!jsImplementation && platform in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations[platform] === 'function'\n                        ? (jsImplementation = await jsImplementations[platform]())\n                        : (jsImplementation = jsImplementations[platform]);\n            }\n            else if (capCustomPlatform !== null &&\n                !jsImplementation &&\n                'web' in jsImplementations) {\n                jsImplementation =\n                    typeof jsImplementations['web'] === 'function'\n                        ? (jsImplementation = await jsImplementations['web']())\n                        : (jsImplementation = jsImplementations['web']);\n            }\n            return jsImplementation;\n        };\n        const createPluginMethod = (impl, prop) => {\n            var _a, _b;\n            if (pluginHeader) {\n                const methodHeader = pluginHeader === null || pluginHeader === void 0 ? void 0 : pluginHeader.methods.find(m => prop === m.name);\n                if (methodHeader) {\n                    if (methodHeader.rtype === 'promise') {\n                        return (options) => cap.nativePromise(pluginName, prop.toString(), options);\n                    }\n                    else {\n                        return (options, callback) => cap.nativeCallback(pluginName, prop.toString(), options, callback);\n                    }\n                }\n                else if (impl) {\n                    return (_a = impl[prop]) === null || _a === void 0 ? void 0 : _a.bind(impl);\n                }\n            }\n            else if (impl) {\n                return (_b = impl[prop]) === null || _b === void 0 ? void 0 : _b.bind(impl);\n            }\n            else {\n                throw new CapacitorException(`\"${pluginName}\" plugin is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n            }\n        };\n        const createPluginMethodWrapper = (prop) => {\n            let remove;\n            const wrapper = (...args) => {\n                const p = loadPluginImplementation().then(impl => {\n                    const fn = createPluginMethod(impl, prop);\n                    if (fn) {\n                        const p = fn(...args);\n                        remove = p === null || p === void 0 ? void 0 : p.remove;\n                        return p;\n                    }\n                    else {\n                        throw new CapacitorException(`\"${pluginName}.${prop}()\" is not implemented on ${platform}`, ExceptionCode.Unimplemented);\n                    }\n                });\n                if (prop === 'addListener') {\n                    p.remove = async () => remove();\n                }\n                return p;\n            };\n            // Some flair ✨\n            wrapper.toString = () => `${prop.toString()}() { [capacitor code] }`;\n            Object.defineProperty(wrapper, 'name', {\n                value: prop,\n                writable: false,\n                configurable: false,\n            });\n            return wrapper;\n        };\n        const addListener = createPluginMethodWrapper('addListener');\n        const removeListener = createPluginMethodWrapper('removeListener');\n        const addListenerNative = (eventName, callback) => {\n            const call = addListener({ eventName }, callback);\n            const remove = async () => {\n                const callbackId = await call;\n                removeListener({\n                    eventName,\n                    callbackId,\n                }, callback);\n            };\n            const p = new Promise(resolve => call.then(() => resolve({ remove })));\n            p.remove = async () => {\n                console.warn(`Using addListener() without 'await' is deprecated.`);\n                await remove();\n            };\n            return p;\n        };\n        const proxy = new Proxy({}, {\n            get(_, prop) {\n                switch (prop) {\n                    // https://github.com/facebook/react/issues/20030\n                    case '$$typeof':\n                        return undefined;\n                    case 'toJSON':\n                        return () => ({});\n                    case 'addListener':\n                        return pluginHeader ? addListenerNative : addListener;\n                    case 'removeListener':\n                        return removeListener;\n                    default:\n                        return createPluginMethodWrapper(prop);\n                }\n            },\n        });\n        Plugins[pluginName] = proxy;\n        registeredPlugins.set(pluginName, {\n            name: pluginName,\n            proxy,\n            platforms: new Set([\n                ...Object.keys(jsImplementations),\n                ...(pluginHeader ? [platform] : []),\n            ]),\n        });\n        return proxy;\n    };\n    const registerPlugin = ((_e = capPlatforms === null || capPlatforms === void 0 ? void 0 : capPlatforms.currentPlatform) === null || _e === void 0 ? void 0 : _e.registerPlugin) || defaultRegisterPlugin;\n    // Add in convertFileSrc for web, it will already be available in native context\n    if (!cap.convertFileSrc) {\n        cap.convertFileSrc = filePath => filePath;\n    }\n    cap.getPlatform = getPlatform;\n    cap.handleError = handleError;\n    cap.isNativePlatform = isNativePlatform;\n    cap.isPluginAvailable = isPluginAvailable;\n    cap.pluginMethodNoop = pluginMethodNoop;\n    cap.registerPlugin = registerPlugin;\n    cap.Exception = CapacitorException;\n    cap.DEBUG = !!cap.DEBUG;\n    cap.isLoggingEnabled = !!cap.isLoggingEnabled;\n    // Deprecated props\n    cap.platform = cap.getPlatform();\n    cap.isNative = cap.isNativePlatform();\n    return cap;\n};\nexport const initCapacitorGlobal = (win) => (win.Capacitor = createCapacitor(win));\n//# sourceMappingURL=runtime.js.map","import { legacyRegisterWebPlugin } from './legacy/legacy-web-plugin-merge';\nimport { initCapacitorGlobal } from './runtime';\nexport const Capacitor = /*#__PURE__*/ initCapacitorGlobal(typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n            ? window\n            : typeof global !== 'undefined'\n                ? global\n                : {});\nexport const registerPlugin = Capacitor.registerPlugin;\n/**\n * @deprecated Provided for backwards compatibility for Capacitor v2 plugins.\n * Capacitor v3 plugins should import the plugin directly. This \"Plugins\"\n * export is deprecated in v3, and will be removed in v4.\n */\nexport const Plugins = Capacitor.Plugins;\n/**\n * Provided for backwards compatibility. Use the registerPlugin() API\n * instead, and provide the web plugin as the \"web\" implmenetation.\n * For example\n *\n * export const Example = registerPlugin('Example', {\n *   web: () => import('./web').then(m => new m.Example())\n * })\n *\n * @deprecated Deprecated in v3, will be removed from v4.\n */\nexport const registerWebPlugin = (plugin) => legacyRegisterWebPlugin(Capacitor, plugin);\n//# sourceMappingURL=global.js.map","import { Capacitor } from './global';\nimport { ExceptionCode } from './util';\n/**\n * Base class web plugins should extend.\n */\nexport class WebPlugin {\n    constructor(config) {\n        this.listeners = {};\n        this.retainedEventArguments = {};\n        this.windowListeners = {};\n        if (config) {\n            // TODO: add link to upgrade guide\n            console.warn(`Capacitor WebPlugin \"${config.name}\" config object was deprecated in v3 and will be removed in v4.`);\n            this.config = config;\n        }\n    }\n    addListener(eventName, listenerFunc) {\n        let firstListener = false;\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            this.listeners[eventName] = [];\n            firstListener = true;\n        }\n        this.listeners[eventName].push(listenerFunc);\n        // If we haven't added a window listener for this event and it requires one,\n        // go ahead and add it\n        const windowListener = this.windowListeners[eventName];\n        if (windowListener && !windowListener.registered) {\n            this.addWindowListener(windowListener);\n        }\n        if (firstListener) {\n            this.sendRetainedArgumentsForEvent(eventName);\n        }\n        const remove = async () => this.removeListener(eventName, listenerFunc);\n        const p = Promise.resolve({ remove });\n        return p;\n    }\n    async removeAllListeners() {\n        this.listeners = {};\n        for (const listener in this.windowListeners) {\n            this.removeWindowListener(this.windowListeners[listener]);\n        }\n        this.windowListeners = {};\n    }\n    notifyListeners(eventName, data, retainUntilConsumed) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            if (retainUntilConsumed) {\n                let args = this.retainedEventArguments[eventName];\n                if (!args) {\n                    args = [];\n                }\n                args.push(data);\n                this.retainedEventArguments[eventName] = args;\n            }\n            return;\n        }\n        listeners.forEach(listener => listener(data));\n    }\n    hasListeners(eventName) {\n        return !!this.listeners[eventName].length;\n    }\n    registerWindowListener(windowEventName, pluginEventName) {\n        this.windowListeners[pluginEventName] = {\n            registered: false,\n            windowEventName,\n            pluginEventName,\n            handler: event => {\n                this.notifyListeners(pluginEventName, event);\n            },\n        };\n    }\n    unimplemented(msg = 'not implemented') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unimplemented);\n    }\n    unavailable(msg = 'not available') {\n        return new Capacitor.Exception(msg, ExceptionCode.Unavailable);\n    }\n    async removeListener(eventName, listenerFunc) {\n        const listeners = this.listeners[eventName];\n        if (!listeners) {\n            return;\n        }\n        const index = listeners.indexOf(listenerFunc);\n        this.listeners[eventName].splice(index, 1);\n        // If there are no more listeners for this type of event,\n        // remove the window listener\n        if (!this.listeners[eventName].length) {\n            this.removeWindowListener(this.windowListeners[eventName]);\n        }\n    }\n    addWindowListener(handle) {\n        window.addEventListener(handle.windowEventName, handle.handler);\n        handle.registered = true;\n    }\n    removeWindowListener(handle) {\n        if (!handle) {\n            return;\n        }\n        window.removeEventListener(handle.windowEventName, handle.handler);\n        handle.registered = false;\n    }\n    sendRetainedArgumentsForEvent(eventName) {\n        const args = this.retainedEventArguments[eventName];\n        if (!args) {\n            return;\n        }\n        delete this.retainedEventArguments[eventName];\n        args.forEach(arg => {\n            this.notifyListeners(eventName, arg);\n        });\n    }\n}\n//# sourceMappingURL=web-plugin.js.map","import { registerPlugin } from './global';\nimport { WebPlugin } from './web-plugin';\nexport const WebView = /*#__PURE__*/ registerPlugin('WebView');\n/******** END WEB VIEW PLUGIN ********/\n/******** COOKIES PLUGIN ********/\n/**\n * Safely web encode a string value (inspired by js-cookie)\n * @param str The string value to encode\n */\nconst encode = (str) => encodeURIComponent(str)\n    .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n    .replace(/[()]/g, escape);\n/**\n * Safely web decode a string value (inspired by js-cookie)\n * @param str The string value to decode\n */\nconst decode = (str) => str.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\nexport class CapacitorCookiesPluginWeb extends WebPlugin {\n    async getCookies() {\n        const cookies = document.cookie;\n        const cookieMap = {};\n        cookies.split(';').forEach(cookie => {\n            if (cookie.length <= 0)\n                return;\n            // Replace first \"=\" with CAP_COOKIE to prevent splitting on additional \"=\"\n            let [key, value] = cookie.replace(/=/, 'CAP_COOKIE').split('CAP_COOKIE');\n            key = decode(key).trim();\n            value = decode(value).trim();\n            cookieMap[key] = value;\n        });\n        return cookieMap;\n    }\n    async setCookie(options) {\n        try {\n            // Safely Encoded Key/Value\n            const encodedKey = encode(options.key);\n            const encodedValue = encode(options.value);\n            // Clean & sanitize options\n            const expires = `; expires=${(options.expires || '').replace('expires=', '')}`; // Default is \"; expires=\"\n            const path = (options.path || '/').replace('path=', ''); // Default is \"path=/\"\n            const domain = options.url != null && options.url.length > 0\n                ? `domain=${options.url}`\n                : '';\n            document.cookie = `${encodedKey}=${encodedValue || ''}${expires}; path=${path}; ${domain};`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async deleteCookie(options) {\n        try {\n            document.cookie = `${options.key}=; Max-Age=0`;\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearCookies() {\n        try {\n            const cookies = document.cookie.split(';') || [];\n            for (const cookie of cookies) {\n                document.cookie = cookie\n                    .replace(/^ +/, '')\n                    .replace(/=.*/, `=;expires=${new Date().toUTCString()};path=/`);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n    async clearAllCookies() {\n        try {\n            await this.clearCookies();\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }\n}\nexport const CapacitorCookies = registerPlugin('CapacitorCookies', {\n    web: () => new CapacitorCookiesPluginWeb(),\n});\n// UTILITY FUNCTIONS\n/**\n * Read in a Blob value and return it as a base64 string\n * @param blob The blob value to convert to a base64 string\n */\nexport const readBlobAsBase64 = async (blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n        const base64String = reader.result;\n        // remove prefix \"data:application/pdf;base64,\"\n        resolve(base64String.indexOf(',') >= 0\n            ? base64String.split(',')[1]\n            : base64String);\n    };\n    reader.onerror = (error) => reject(error);\n    reader.readAsDataURL(blob);\n});\n/**\n * Normalize an HttpHeaders map by lowercasing all of the values\n * @param headers The HttpHeaders object to normalize\n */\nconst normalizeHttpHeaders = (headers = {}) => {\n    const originalKeys = Object.keys(headers);\n    const loweredKeys = Object.keys(headers).map(k => k.toLocaleLowerCase());\n    const normalized = loweredKeys.reduce((acc, key, index) => {\n        acc[key] = headers[originalKeys[index]];\n        return acc;\n    }, {});\n    return normalized;\n};\n/**\n * Builds a string of url parameters that\n * @param params A map of url parameters\n * @param shouldEncode true if you should encodeURIComponent() the values (true by default)\n */\nconst buildUrlParams = (params, shouldEncode = true) => {\n    if (!params)\n        return null;\n    const output = Object.entries(params).reduce((accumulator, entry) => {\n        const [key, value] = entry;\n        let encodedValue;\n        let item;\n        if (Array.isArray(value)) {\n            item = '';\n            value.forEach(str => {\n                encodedValue = shouldEncode ? encodeURIComponent(str) : str;\n                item += `${key}=${encodedValue}&`;\n            });\n            // last character will always be \"&\" so slice it off\n            item.slice(0, -1);\n        }\n        else {\n            encodedValue = shouldEncode ? encodeURIComponent(value) : value;\n            item = `${key}=${encodedValue}`;\n        }\n        return `${accumulator}&${item}`;\n    }, '');\n    // Remove initial \"&\" from the reduce\n    return output.substr(1);\n};\n/**\n * Build the RequestInit object based on the options passed into the initial request\n * @param options The Http plugin options\n * @param extra Any extra RequestInit values\n */\nexport const buildRequestInit = (options, extra = {}) => {\n    const output = Object.assign({ method: options.method || 'GET', headers: options.headers }, extra);\n    // Get the content-type\n    const headers = normalizeHttpHeaders(options.headers);\n    const type = headers['content-type'] || '';\n    // If body is already a string, then pass it through as-is.\n    if (typeof options.data === 'string') {\n        output.body = options.data;\n    }\n    // Build request initializers based off of content-type\n    else if (type.includes('application/x-www-form-urlencoded')) {\n        const params = new URLSearchParams();\n        for (const [key, value] of Object.entries(options.data || {})) {\n            params.set(key, value);\n        }\n        output.body = params.toString();\n    }\n    else if (type.includes('multipart/form-data') ||\n        options.data instanceof FormData) {\n        const form = new FormData();\n        if (options.data instanceof FormData) {\n            options.data.forEach((value, key) => {\n                form.append(key, value);\n            });\n        }\n        else {\n            for (const key of Object.keys(options.data)) {\n                form.append(key, options.data[key]);\n            }\n        }\n        output.body = form;\n        const headers = new Headers(output.headers);\n        headers.delete('content-type'); // content-type will be set by `window.fetch` to includy boundary\n        output.headers = headers;\n    }\n    else if (type.includes('application/json') ||\n        typeof options.data === 'object') {\n        output.body = JSON.stringify(options.data);\n    }\n    return output;\n};\n// WEB IMPLEMENTATION\nexport class CapacitorHttpPluginWeb extends WebPlugin {\n    /**\n     * Perform an Http request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async request(options) {\n        const requestInit = buildRequestInit(options, options.webFetchExtra);\n        const urlParams = buildUrlParams(options.params, options.shouldEncodeUrlParams);\n        const url = urlParams ? `${options.url}?${urlParams}` : options.url;\n        const response = await fetch(url, requestInit);\n        const contentType = response.headers.get('content-type') || '';\n        // Default to 'text' responseType so no parsing happens\n        let { responseType = 'text' } = response.ok ? options : {};\n        // If the response content-type is json, force the response to be json\n        if (contentType.includes('application/json')) {\n            responseType = 'json';\n        }\n        let data;\n        let blob;\n        switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n                blob = await response.blob();\n                data = await readBlobAsBase64(blob);\n                break;\n            case 'json':\n                data = await response.json();\n                break;\n            case 'document':\n            case 'text':\n            default:\n                data = await response.text();\n        }\n        // Convert fetch headers to Capacitor HttpHeaders\n        const headers = {};\n        response.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        return {\n            data,\n            headers,\n            status: response.status,\n            url: response.url,\n        };\n    }\n    /**\n     * Perform an Http GET request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async get(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'GET' }));\n    }\n    /**\n     * Perform an Http POST request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async post(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'POST' }));\n    }\n    /**\n     * Perform an Http PUT request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async put(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PUT' }));\n    }\n    /**\n     * Perform an Http PATCH request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async patch(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'PATCH' }));\n    }\n    /**\n     * Perform an Http DELETE request given a set of options\n     * @param options Options to build the HTTP request\n     */\n    async delete(options) {\n        return this.request(Object.assign(Object.assign({}, options), { method: 'DELETE' }));\n    }\n}\nexport const CapacitorHttp = registerPlugin('CapacitorHttp', {\n    web: () => new CapacitorHttpPluginWeb(),\n});\n/******** END HTTP PLUGIN ********/\n//# sourceMappingURL=core-plugins.js.map","import { registerPlugin } from '@capacitor/core';\n\nimport type { NetworkPlugin } from './definitions';\n\nconst Network = registerPlugin<NetworkPlugin>('Network', {\n  web: () => import('./web').then(m => new m.NetworkWeb()),\n});\n\nexport * from './definitions';\nexport { Network };\n"],"names":["CapacitorPlatforms","win","defaultPlatformMap","Map","set","name","capPlatforms","currentPlatform","platforms","addPlatform","platform","setPlatform","has","get","createCapacitorPlatforms","initPlatforms","globalThis","self","window","global","ExceptionCode","CapacitorException","Error","constructor","message","code","data","super","this","createCapacitor","_a","_b","_c","_d","_e","capCustomPlatform","CapacitorCustomPlatform","cap","Capacitor","Plugins","getPlatform","defaultGetPlatform","androidBridge","webkit","messageHandlers","bridge","getPlatformId","isNativePlatform","defaultIsNativePlatform","isPluginAvailable","pluginName","plugin","registeredPlugins","getPluginHeader","PluginHeaders","find","h","registerPlugin","jsImplementations","arguments","length","undefined","registeredPlugin","console","warn","concat","proxy","pluginHeader","jsImplementation","createPluginMethodWrapper","prop","remove","wrapper","_len","args","Array","_key","p","async","loadPluginImplementation","then","impl","fn","createPluginMethod","bind","Unimplemented","methodHeader","methods","m","rtype","options","nativePromise","toString","callback","nativeCallback","Object","defineProperty","value","writable","configurable","addListener","removeListener","addListenerNative","eventName","call","callbackId","Promise","resolve","Proxy","_","Set","keys","convertFileSrc","filePath","handleError","err","error","pluginMethodNoop","_target","reject","Exception","DEBUG","isLoggingEnabled","isNative","initCapacitorGlobal","WebPlugin","config","listeners","retainedEventArguments","windowListeners","listenerFunc","firstListener","push","windowListener","registered","addWindowListener","sendRetainedArgumentsForEvent","removeAllListeners","listener","removeWindowListener","notifyListeners","retainUntilConsumed","forEach","hasListeners","registerWindowListener","windowEventName","pluginEventName","handler","event","unimplemented","msg","unavailable","Unavailable","index","indexOf","splice","handle","addEventListener","removeEventListener","arg","encode","str","encodeURIComponent","replace","decodeURIComponent","escape","decode","CapacitorCookiesPluginWeb","getCookies","cookies","document","cookie","cookieMap","split","key","trim","setCookie","encodedKey","encodedValue","expires","path","domain","url","deleteCookie","clearCookies","Date","toUTCString","clearAllCookies","web","buildRequestInit","extra","output","assign","method","headers","originalKeys","map","k","toLocaleLowerCase","reduce","acc","normalizeHttpHeaders","type","body","includes","params","URLSearchParams","entries","FormData","form","append","Headers","delete","JSON","stringify","CapacitorHttpPluginWeb","request","requestInit","webFetchExtra","urlParams","shouldEncode","accumulator","entry","item","isArray","slice","substr","buildUrlParams","shouldEncodeUrlParams","response","fetch","contentType","blob","responseType","ok","reader","FileReader","onload","base64String","result","onerror","readAsDataURL","readBlobAsBase64","json","text","status","post","put","patch","Network","NetworkWeb"],"sourceRoot":""}