{"version":3,"file":"static/js/291.d791fcfe.chunk.js","mappings":"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","sources":["pages/Orders/OrdersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button, Badge, Table, LoadingSpinner, Input } from '../../components/UI';\nimport { useAuth } from '../../contexts/AuthContext';\nimport api from '../../services/api';\n\n\nconst OrdersPage = () => {\n  const { hasRole, user } = useAuth();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  \n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [priorityFilter, setPriorityFilter] = useState('all');\n\n  // Çalışanlar için siparişleri görevler olarak göster\n  const isWorker = user?.role === 'fabrika_iscisi';\n  \n\n  useEffect(() => {\n    const loadOrders = async () => {\n      // Eğer user yoksa veya loading durumundaysa bekle\n      if (!user) {\n        return;\n      }\n      \n      setLoading(true);\n      try {\n        // 1) Backend'den admin siparişlerini getir\n        let backendOrders = [];\n        try {\n          const res = await api.get('/orders');\n          // Backend response: { success: true, data: { orders: [...], pagination: {...} } }\n          backendOrders = res.data?.success && res.data?.data?.orders ? res.data.data.orders : [];\n        } catch (apiErr) {\n          console.warn('Backend orders fetch failed, continue with local orders only.', apiErr?.message);\n          backendOrders = [];\n        }\n        const apiNormalized = backendOrders.map((o, idx) => {\n          const createdAt = o.createdAt || new Date().toISOString();\n          const orderNumber = o.orderNumber || `WEB-${new Date(createdAt).getFullYear()}-${String(idx + 1).padStart(3, '0')}`;\n          \n          // Backend'den gelen veri yapısına göre mapping\n          const productName = o.items && o.items.length > 0 ? o.items[0].productName : (o.title || 'Ürün');\n          const customerName = o.createdBy && o.createdBy.firstName ? \n            `${o.createdBy.firstName} ${o.createdBy.lastName || ''}`.trim() : \n            (o.createdBy && o.createdBy.username ? o.createdBy.username : 'Müşteri');\n          const quantity = o.items && o.items.length > 0 ? o.items[0].quantity : 0;\n          const unitPrice = 0; // Backend'de unitPrice yok\n          const totalAmount = 0; // Backend'de totalPrice yok\n          const deliveryDate = o.dueDate || o.deliveryDate || null;\n          const orderDate = o.orderDate || createdAt;\n          const status = o.status || 'beklemede';\n          const priority = o.priority || 'normal';\n          \n          \n          return {\n            id: o._id, // Backend'deki gerçek _id'yi id olarak kullan\n            _id: o._id,\n            orderNumber,\n            product: productName,\n            productName,\n            customerName,\n            quantity,\n            unitPrice,\n            totalAmount,\n            deliveryDate,\n            orderDate,\n            status,\n            priority,\n            createdAt,\n            source: 'backend',\n            // Backend'den gelen diğer alanlar\n            title: o.title,\n            description: o.description,\n            location: o.location,\n            assignedTo: o.assignedTo,\n            items: o.items,\n            createdBy: o.createdBy,\n            updatedAt: o.updatedAt\n          };\n        });\n\n        // 2) Sadece backend'den gelen verileri kullan\n        setOrders(apiNormalized);\n\n        await new Promise(resolve => setTimeout(resolve, 300));\n      } catch (error) {\n        console.error('Orders loading error:', error);\n        setOrders([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadOrders();\n  }, [user]); // user dependency'sini geri ekledim\n\n  const getStatusBadge = (status) => {\n    const statusConfig = {\n      beklemede: { variant: 'warning', text: 'Beklemede' },\n      onaylandi: { variant: 'primary', text: 'Onaylandı' },\n      hazirlaniyor: { variant: 'primary', text: 'Hazırlanıyor' },\n      ham_madde_bekleniyor: { variant: 'warning', text: 'Ham Madde Bekleniyor' },\n      uretimde: { variant: 'primary', text: 'Üretimde' },\n      kalite_kontrol: { variant: 'info', text: 'Kalite Kontrol' },\n      paketleniyor: { variant: 'primary', text: 'Paketleniyor' },\n      kargoya_verildi: { variant: 'info', text: 'Kargoya Verildi' },\n      teslim_edildi: { variant: 'success', text: 'Teslim Edildi' },\n      iptal_edildi: { variant: 'danger', text: 'İptal Edildi' },\n      // Eski değerler için backward compatibility\n      pending: { variant: 'warning', text: 'Beklemede' },\n      in_progress: { variant: 'primary', text: 'İşlemde' },\n      completed: { variant: 'success', text: 'Tamamlandı' },\n      cancelled: { variant: 'danger', text: 'İptal Edildi' }\n    };\n    \n    const config = statusConfig[status] || { variant: 'secondary', text: status };\n    return <Badge variant={config.variant}>{config.text}</Badge>;\n  };\n\n  const getPriorityBadge = (priority) => {\n    const priorityConfig = {\n      düşük: { variant: 'success', text: 'Düşük' },\n      normal: { variant: 'warning', text: 'Normal' },\n      yüksek: { variant: 'danger', text: 'Yüksek' },\n      acil: { variant: 'danger', text: 'Acil' },\n      // Eski değerler için backward compatibility\n      low: { variant: 'success', text: 'Düşük' },\n      medium: { variant: 'warning', text: 'Orta' },\n      high: { variant: 'danger', text: 'Yüksek' }\n    };\n    \n    const config = priorityConfig[priority] || { variant: 'secondary', text: priority };\n    return <Badge variant={config.variant} size=\"sm\">{config.text}</Badge>;\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('tr-TR');\n  };\n\n  const formatCurrency = (amount) => {\n    return new Intl.NumberFormat('tr-TR', {\n      style: 'currency',\n      currency: 'TRY'\n    }).format(amount);\n  };\n\n  const filteredOrders = orders.filter(order => {\n    if (!order) return false;\n    const matchesSearch = \n      order.orderNumber?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      order.customerName?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      (order.product || order.productName)?.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesStatus = statusFilter === 'all' || order.status === statusFilter;\n    \n    return matchesSearch && matchesStatus;\n  });\n  \n\n  const columns = [\n    {\n      key: 'orderNumber',\n      header: isWorker ? 'Görev No' : 'Sipariş No',\n      render: (cellValue, order, rowIndex) => (\n        <Link \n          to={`/orders/${order?.id || ''}`}\n          className=\"text-blue-600 hover:text-blue-800 font-medium\"\n        >\n          {order?.orderNumber || 'N/A'}\n        </Link>\n      )\n    },\n    {\n      key: 'customerName',\n      header: 'Müşteri',\n      render: (cellValue, order, rowIndex) => (\n        <div>\n          <div className=\"font-medium text-gray-900\">{order?.customerName || 'Bilinmeyen Müşteri'}</div>\n          <div className=\"text-sm text-gray-500\">{order?.customerEmail || '-'}</div>\n        </div>\n      )\n    },\n    {\n      key: 'product',\n      header: 'Ürün',\n      render: (cellValue, order, rowIndex) => (\n        <div>\n          <div className=\"font-medium text-gray-900\">{order?.product || order?.productName || 'Bilinmeyen Ürün'}</div>\n          <div className=\"text-sm text-gray-500\">Adet: {order?.quantity || 0}</div>\n        </div>\n      )\n    },\n    {\n      key: 'status',\n      header: 'Durum',\n      render: (cellValue, order, rowIndex) => (\n        <div className=\"space-y-1\">\n          {getStatusBadge(order?.status || 'pending')}\n          {getPriorityBadge(order?.priority || 'medium')}\n        </div>\n      )\n    },\n    {\n      key: 'dates',\n      header: 'Tarihler',\n      render: (cellValue, order, rowIndex) => (\n        <div className=\"text-sm\">\n          <div>Sipariş: {order?.orderDate ? formatDate(order.orderDate) : '-'}</div>\n          <div className=\"text-gray-500\">Teslimat: {order?.deliveryDate ? formatDate(order.deliveryDate) : '-'}</div>\n        </div>\n      )\n    },\n    {\n      key: 'totalAmount',\n      header: 'Tutar',\n      render: (cellValue, order, rowIndex) => (\n        <div className=\"font-medium text-gray-900\">\n          {formatCurrency(order?.totalAmount || 0)}\n        </div>\n      )\n    },\n    {\n      key: 'actions',\n      header: 'İşlemler',\n      render: (cellValue, order, rowIndex) => (\n        <div className=\"flex space-x-2\">\n          <Link \n            to={`/orders/${order?.id || ''}`}\n            className=\"inline-block\"\n          >\n            <Button size=\"sm\" variant=\"outline\">\n              Görüntüle\n            </Button>\n          </Link>\n          {order?.status === 'pending' && (\n            <Button size=\"sm\" variant=\"primary\">\n              Başlat\n            </Button>\n          )}\n        </div>\n      )\n    }\n  ];\n\n  const statusOptions = [\n    { value: 'all', label: 'Tüm Durumlar' },\n    { value: 'pending', label: 'Beklemede' },\n    { value: 'in_progress', label: 'İşlemde' },\n    { value: 'completed', label: 'Tamamlandı' },\n    { value: 'cancelled', label: 'İptal Edildi' }\n  ];\n\n  const getStatusCounts = () => {\n    return orders.reduce((acc, order) => {\n      if (order?.status) {\n        // Backend status'larını frontend status'larına map et\n        let mappedStatus = order.status;\n        \n        // Backend status'larını frontend status'larına çevir\n        const statusMapping = {\n          'beklemede': 'pending',\n          'onaylandi': 'pending',\n          'hazirlaniyor': 'in_progress',\n          'ham_madde_bekleniyor': 'in_progress',\n          'uretimde': 'in_progress',\n          'kalite_kontrol': 'in_progress',\n          'paketleniyor': 'in_progress',\n          'kargoya_verildi': 'in_progress',\n          'teslim_edildi': 'completed',\n          'iptal_edildi': 'cancelled'\n        };\n        \n        mappedStatus = statusMapping[order.status] || order.status;\n        acc[mappedStatus] = (acc[mappedStatus] || 0) + 1;\n      }\n      return acc;\n    }, {});\n  };\n\n  const statusCounts = getStatusCounts();\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <LoadingSpinner size=\"lg\" text=\"Siparişler yükleniyor...\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n        {/* Header */}\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              {isWorker ? 'Görevlerim' : 'Sipariş Yönetimi'}\n            </h1>\n            <p className=\"text-gray-600 mt-2\">\n              {isWorker \n                ? `Toplam ${orders.length} görev bulundu`\n                : `Toplam ${orders.length} sipariş bulundu`\n              }\n            </p>\n          </div>\n          {hasRole(['admin', 'magaza_personeli']) && (\n            <Link to=\"/orders/new\">\n              <Button variant=\"primary\">\n                📦 Yeni Sipariş Oluştur\n              </Button>\n            </Link>\n          )}\n        </div>\n\n        {/* Status Summary */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\n          <Card className=\"p-4\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-yellow-100 rounded-lg mr-3\">\n                <span className=\"text-yellow-600 text-xl\">⏳</span>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">{isWorker ? 'Devam Eden Görevler' : 'Beklemede'}</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{statusCounts.pending || 0}</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 rounded-lg mr-3\">\n                <span className=\"text-blue-600 text-xl\">🔄</span>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">{isWorker ? 'Devam Eden Görevler' : 'İşlemde'}</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{statusCounts.in_progress || 0}</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-green-100 rounded-lg mr-3\">\n                <span className=\"text-green-600 text-xl\">✅</span>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Tamamlandı</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{statusCounts.completed || 0}</p>\n              </div>\n            </div>\n          </Card>\n          <Card className=\"p-4\">\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-red-100 rounded-lg mr-3\">\n                <span className=\"text-red-600 text-xl\">❌</span>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">İptal Edildi</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{statusCounts.cancelled || 0}</p>\n              </div>\n            </div>\n          </Card>\n        </div>\n\n        {/* Filters */}\n        <Card className=\"p-4 mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Input\n              placeholder={isWorker ? 'Görev no, müşteri adı veya ürün ara...' : 'Sipariş no, müşteri adı veya ürün ara...'}\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n            <select\n              value={statusFilter}\n              onChange={(e) => setStatusFilter(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {statusOptions.map(option => (\n                <option key={option.value} value={option.value}>{option.label}</option>\n              ))}\n            </select>\n            <select\n              value={priorityFilter}\n              onChange={(e) => setPriorityFilter(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">Tüm Öncelikler</option>\n              <option value=\"high\">Yüksek</option>\n              <option value=\"medium\">Orta</option>\n              <option value=\"low\">Düşük</option>\n            </select>\n          </div>\n        </Card>\n\n        {/* Orders Table */}\n        <Card>\n          <Table columns={columns} data={filteredOrders} />\n        </Card>\n    </div>\n  );\n};\n\nexport default OrdersPage;"],"names":["OrdersPage","hasRole","user","useAuth","orders","setOrders","useState","loading","setLoading","searchTerm","setSearchTerm","statusFilter","setStatusFilter","priorityFilter","setPriorityFilter","isWorker","role","useEffect","async","backendOrders","_res$data","_res$data2","_res$data2$data","res","api","get","data","success","apiErr","console","warn","message","apiNormalized","map","o","idx","createdAt","Date","toISOString","orderNumber","concat","getFullYear","String","padStart","productName","items","length","title","customerName","createdBy","firstName","lastName","trim","username","quantity","deliveryDate","dueDate","orderDate","status","priority","id","_id","product","unitPrice","totalAmount","source","description","location","assignedTo","updatedAt","Promise","resolve","setTimeout","error","loadOrders","getStatusBadge","config","beklemede","variant","text","onaylandi","hazirlaniyor","ham_madde_bekleniyor","uretimde","kalite_kontrol","paketleniyor","kargoya_verildi","teslim_edildi","iptal_edildi","pending","in_progress","completed","cancelled","_jsx","Badge","children","getPriorityBadge","düşük","normal","yüksek","acil","low","medium","high","size","formatDate","dateString","toLocaleDateString","filteredOrders","filter","order","_order$orderNumber","_order$customerName","_ref","matchesSearch","toLowerCase","includes","matchesStatus","columns","key","header","render","cellValue","rowIndex","Link","to","className","_jsxs","customerEmail","amount","Intl","NumberFormat","style","currency","format","Button","statusCounts","reduce","acc","mappedStatus","LoadingSpinner","Card","Input","placeholder","value","onChange","e","target","label","option","Table"],"sourceRoot":""}