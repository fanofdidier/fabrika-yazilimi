{"version":3,"file":"static/js/300.bf86d14d.chunk.js","mappings":"uOAGA,MAiMA,EAjMqBA,IAOd,IAPe,MACpBC,EAAK,SACLC,EAAQ,YACRC,EAAc,oCAAmB,gBACjCC,EAAe,UACfC,EAAY,GAAE,MACdC,EAAQ,MACTN,EACC,MAAOO,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,WAAS,IAChDK,EAAeC,IAAoBN,EAAAA,EAAAA,WAAU,GAE9CO,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAiBD,EAAAA,EAAAA,QAAO,MACxBE,GAAcF,EAAAA,EAAAA,QAAO,MA2CrBG,EAA0BC,IAC9BnB,EAASmB,EAAQC,MACjBT,GAAmB,GACnBE,GAAkB,GAEdX,GACFA,EAAgBiB,IA8DpB,OA1BAE,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAsBC,IAExBP,EAAeQ,UACdR,EAAeQ,QAAQC,SAASF,EAAMG,SACvCZ,EAASU,UACRV,EAASU,QAAQC,SAASF,EAAMG,UAEjCf,GAAmB,GACnBE,GAAkB,KAKtB,OADAc,SAASC,iBAAiB,YAAaN,GAChC,IAAMK,SAASE,oBAAoB,YAAaP,IACtD,KAGHD,EAAAA,EAAAA,WAAU,IACD,KACDJ,EAAYO,SACdM,aAAab,EAAYO,UAG5B,KAGDO,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,WAAU6B,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SACEC,IAAKpB,EACLqB,KAAK,OACLpC,MAAOA,EACPC,SA7FqBoC,IACzB,MAAMC,EAAWD,EAAEV,OAAO3B,MAC1BC,EAASqC,GAGLpB,EAAYO,SACdM,aAAab,EAAYO,SAI3BP,EAAYO,QAAUc,WAAW,KA/BZC,WACrB,GAAIC,EAAMC,OAAS,EACjBnC,EAAe,QADjB,CAKAG,GAAa,GACb,IACE,MAAMiC,QAAiBC,EAAAA,GAAIC,IAAI,sBAADC,OAAuBC,mBAAmBN,GAAM,aAC1EE,EAASK,KAAKC,SAChB1C,EAAeoC,EAASK,KAAKA,KAAKE,SAEtC,CAAE,MAAO7C,GACP8C,QAAQ9C,MAAM,gCAAsBA,GACpCE,EAAe,GACjB,CAAC,QACCG,GAAa,EACf,CAbA,GA4BE0C,CAAed,IACd,KAEH1B,GAAmB,GACnBE,GAAkB,IA+EduC,UAhEiBhB,IACrB,GAAK1B,GAA0C,IAAvBL,EAAYoC,OAEpC,OAAQL,EAAEiB,KACR,IAAK,YACHjB,EAAEkB,iBACFzC,EAAiB0C,GACfA,EAAOlD,EAAYoC,OAAS,EAAIc,EAAO,EAAIA,GAE7C,MACF,IAAK,UACHnB,EAAEkB,iBACFzC,EAAiB0C,GAAQA,EAAO,EAAIA,EAAO,GAAK,GAChD,MACF,IAAK,QACHnB,EAAEkB,iBACE1C,GAAiB,GAAKA,EAAgBP,EAAYoC,QACpDvB,EAAuBb,EAAYO,IAErC,MACF,IAAK,SACHD,GAAmB,GACnBE,GAAkB,KA2ClB2C,QAASA,IAAM7C,GAAmB,GAClCV,YAAaA,EACbE,UAAS,iHAAA0C,OAELzC,EAAQ,iBAAmB,kBAAiB,gBAAAyC,OAC5C1C,EAAS,cAEbsD,aAAa,QAIdjD,IACCyB,EAAAA,EAAAA,KAAA,OAAK9B,UAAU,sDAAqD6B,UAClEC,EAAAA,EAAAA,KAAA,OAAK9B,UAAU,mEAKlBO,GAAmBL,EAAYoC,OAAS,IACvCR,EAAAA,EAAAA,KAAA,OACEC,IAAKlB,EACLb,UAAU,0GAAyG6B,SAElH3B,EAAYqD,IAAI,CAACvC,EAASwC,KACzB5B,EAAAA,EAAAA,MAAA,OAEE6B,QAASA,IAAM1C,EAAuBC,GACtChB,UAAS,mHAAA0C,OAELc,IAAU/C,EAAgB,aAAe,GAAE,oBAC7CoB,SAAA,EAEFD,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,SAAQ6B,SAAA,EACrBC,EAAAA,EAAAA,KAAA,OAAK9B,UAAU,4BAA2B6B,SAAEb,EAAQC,OACnDD,EAAQ0C,cACP5B,EAAAA,EAAAA,KAAA,OAAK9B,UAAU,wBAAuB6B,SAAEb,EAAQ0C,kBAGpD9B,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,8BAA6B6B,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAM9B,UAAU,sDAAqD6B,SAClEb,EAAQ2C,YAEX/B,EAAAA,EAAAA,MAAA,QAAM5B,UAAU,wBAAuB6B,SAAA,CACpCb,EAAQ4C,WAAW,oCAlBnB5C,EAAQ6C,QA2BpB5D,IACC6B,EAAAA,EAAAA,KAAA,KAAG9B,UAAU,4BAA2B6B,SAAE5B,QCwFlD,EAhRwB6D,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAc9D,EAAAA,EAAAA,WAAS,IAChC+D,EAAQC,IAAahE,EAAAA,EAAAA,UAAS,CAAC,IAE/BiE,EAAUC,IAAelE,EAAAA,EAAAA,UAAS,CACvCmE,YAAa,GACbC,YAAa,GACbC,SAAU,SACVC,aAAc,GACdC,MAAO,MAGFC,EAAiBC,IAAsBzE,EAAAA,EAAAA,UAAS,MAEjD0E,EAAqB7C,IACzB,MAAM,KAAEhB,EAAI,MAAErB,GAAUqC,EAAEV,OAE1B+C,EAAYlB,IAAI2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACX3B,GAAI,IACP,CAACnC,GAAOrB,KAINuE,EAAOlD,IACTmD,EAAUhB,IAAI2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT3B,GAAI,IACP,CAACnC,GAAO,OAgHd,OACEW,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,wBAAuB6B,SAAA,EAEpCD,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,yCAAwC6B,SAAA,EACrDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAI9B,UAAU,mCAAkC6B,SAAC,oCACjDC,EAAAA,EAAAA,KAAA,KAAG9B,UAAU,qBAAoB6B,SAAC,gDAEpCC,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAACC,GAAG,UAASpD,UAChBC,EAAAA,EAAAA,KAACoD,EAAAA,GAAM,CAACC,QAAQ,UAAStD,SAAC,sBAK9BD,EAAAA,EAAAA,MAAA,QAAMwD,SAvEWhD,UAGnB,GAFAH,EAAEkB,iBA5BiBkC,MACnB,MAAMC,EAAY,CAAC,EAUnB,GARKjB,EAASE,YAAYgB,SACxBD,EAAUf,YAAc,kCAGrBF,EAASG,YAAYe,SACxBD,EAAUd,YAAc,8BAGrBH,EAASK,aAEP,CACL,MAAMA,EAAe,IAAIc,KAAKnB,EAASK,cACjCe,EAAQ,IAAID,KAClBC,EAAMC,SAAS,EAAG,EAAG,EAAG,GAEpBhB,GAAgBe,IAClBH,EAAUZ,aAAe,wDAE7B,MATEY,EAAUZ,aAAe,6BAY3B,OADAN,EAAUkB,GAC+B,IAAlCK,OAAOC,KAAKN,GAAWhD,QAMzB+C,GAAL,CAIAnB,GAAW,GAEX,KAEOU,GAAmBP,EAASE,YAAYgB,cAErC/C,EAAAA,GAAIqD,KAAK,YAAa,CAC1B5E,KAAMoD,EAASE,YAAYgB,OAC3B7B,YAAaW,EAASM,OAAS,GAC/BhB,SAAU,eAId,MAAMmC,EAAY,CAChBC,MAAO1B,EAASE,YAChBb,YAAaW,EAASM,OAAK,GAAAjC,OAAO2B,EAASG,YAAW,OAAA9B,OAAM2B,EAASE,aACrEE,SAAUJ,EAASI,SACnBuB,QAAS3B,EAASK,aAClBuB,SAAU,UACVC,MAAO,CAAC,CACN3B,YAAaF,EAASE,YACtB4B,SAAU,EACVC,KAAM,OACN1C,YAAaW,EAASM,OAAK,GAAAjC,OAAO2B,EAASG,YAAW,OAAA9B,OAAM2B,EAASE,aACrE8B,QAAShC,EAASI,YAIhBlC,QAAiBC,EAAAA,GAAIqD,KAAK,UAAWC,GAE3C,IAAIvD,EAASK,KAAKC,QAUhB,MAAM,IAAIyD,MAAM,sBAThBvD,QAAQwD,IAAI,qDAAkChE,EAASK,KAAKA,KAAK4D,OAEjEzC,EAAS,UAAW,CAClB0C,MAAO,CACLC,QAAS,qDACT1E,KAAM,YAMd,CAAE,MAAO/B,GACP8C,QAAQ9C,MAAM,2CAA6BA,GAC3CmE,EAAU,CAAEuC,OAAQ,oFACtB,CAAC,QACCzC,GAAW,EACb,CAjDA,GAkEgClE,UAAU,YAAW6B,SAAA,EAEjDD,EAAAA,EAAAA,MAACgF,EAAAA,GAAI,CAAC5G,UAAU,MAAK6B,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAI9B,UAAU,2CAA0C6B,SAAC,0BACzDD,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,wCAAuC6B,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO9B,UAAU,+CAA8C6B,SAAC,2BAGhEC,EAAAA,EAAAA,KAAC+E,EAAY,CACXjH,MAAOyE,EAASE,YAChB1E,SApImBD,IAC/B0E,EAAYlB,IAAI2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACX3B,GAAI,IACPmB,YAAa3E,KAIXuE,EAAOI,aACTH,EAAUhB,IAAI2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACT3B,GAAI,IACPmB,YAAa,OA2HLxE,gBAtHeiB,IAC3B6D,EAAmB7D,GACnBsD,EAAYlB,IAAI2B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACX3B,GAAI,IACPmB,YAAavD,EAAQC,SAmHXnB,YAAY,6DACZG,MAAOkE,EAAOI,cAEfK,IACChD,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,8BAA6B6B,SAAA,CAAC,UACxC+C,EAAgBhB,WAAW,oDAIpChC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO9B,UAAU,+CAA8C6B,SAAC,uBAGhEC,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ7F,KAAK,cACLrB,MAAOyE,EAASG,YAChB3E,SAAUiF,EACVhF,YAAY,0BACZG,MAAOkE,EAAOK,wBAOtB5C,EAAAA,EAAAA,MAACgF,EAAAA,GAAI,CAAC5G,UAAU,MAAK6B,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAI9B,UAAU,2CAA0C6B,SAAC,iCACzDD,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,wCAAuC6B,SAAA,EACpDD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO9B,UAAU,+CAA8C6B,SAAC,gBAGhED,EAAAA,EAAAA,MAAA,UACEX,KAAK,WACLrB,MAAOyE,EAASI,SAChB5E,SAAUiF,EACV9E,UAAU,yGAAwG6B,SAAA,EAElHC,EAAAA,EAAAA,KAAA,UAAQlC,MAAM,mBAAOiC,SAAC,sBACtBC,EAAAA,EAAAA,KAAA,UAAQlC,MAAM,SAAQiC,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQlC,MAAM,YAAQiC,SAAC,eACvBC,EAAAA,EAAAA,KAAA,UAAQlC,MAAM,OAAMiC,SAAC,gBAGzBD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAO9B,UAAU,+CAA8C6B,SAAC,uBAGhEC,EAAAA,EAAAA,KAACgF,EAAAA,GAAK,CACJ9E,KAAK,OACLf,KAAK,eACLrB,MAAOyE,EAASK,aAChB7E,SAAUiF,EACV7E,MAAOkE,EAAOO,sBAIpB9C,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,OAAM6B,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAO9B,UAAU,+CAA8C6B,SAAC,sBAGhEC,EAAAA,EAAAA,KAAA,YACEb,KAAK,QACLrB,MAAOyE,EAASM,MAChB9E,SAAUiF,EACVhF,YAAY,mDACZE,UAAU,yGACV+G,KAAM,UAMX5C,EAAOwC,SACN7E,EAAAA,EAAAA,KAAA,OAAK9B,UAAU,iDAAgD6B,UAC7DC,EAAAA,EAAAA,KAAA,KAAG9B,UAAU,eAAc6B,SAAEsC,EAAOwC,YAKxC/E,EAAAA,EAAAA,MAAA,OAAK5B,UAAU,6BAA4B6B,SAAA,EACzCC,EAAAA,EAAAA,KAACkD,EAAAA,GAAI,CAACC,GAAG,UAASpD,UAChBC,EAAAA,EAAAA,KAACoD,EAAAA,GAAM,CAAClD,KAAK,SAASmD,QAAQ,UAAStD,SAAC,kBAI1CC,EAAAA,EAAAA,KAACoD,EAAAA,GAAM,CACLlD,KAAK,SACLmD,QAAQ,UACR6B,SAAU/C,EAAQpC,SAEjBoC,GACCrC,EAAAA,EAAAA,MAAAqF,EAAAA,SAAA,CAAApF,SAAA,EACEC,EAAAA,EAAAA,KAACoF,EAAAA,GAAc,CAACC,KAAK,KAAKnH,UAAU,SAAS,wCAI/C,uC","sources":["components/UI/AutoComplete.js","pages/Orders/CreateOrderPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport api from '../../services/api';\n\nconst AutoComplete = ({ \n  value, \n  onChange, \n  placeholder = \"Ürün adı yazın...\", \n  onProductSelect,\n  className = \"\",\n  error = null \n}) => {\n  const [suggestions, setSuggestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  \n  const inputRef = useRef(null);\n  const suggestionsRef = useRef(null);\n  const debounceRef = useRef(null);\n\n  // Debounced search function\n  const searchProducts = async (query) => {\n    if (query.length < 2) {\n      setSuggestions([]);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await api.get(`/products/search?q=${encodeURIComponent(query)}&limit=8`);\n      if (response.data.success) {\n        setSuggestions(response.data.data.products);\n      }\n    } catch (error) {\n      console.error('Ürün arama hatası:', error);\n      setSuggestions([]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const newValue = e.target.value;\n    onChange(newValue);\n\n    // Clear previous debounce\n    if (debounceRef.current) {\n      clearTimeout(debounceRef.current);\n    }\n\n    // Set new debounce\n    debounceRef.current = setTimeout(() => {\n      searchProducts(newValue);\n    }, 300);\n\n    setShowSuggestions(true);\n    setSelectedIndex(-1);\n  };\n\n  // Handle suggestion selection\n  const handleSuggestionSelect = (product) => {\n    onChange(product.name);\n    setShowSuggestions(false);\n    setSelectedIndex(-1);\n    \n    if (onProductSelect) {\n      onProductSelect(product);\n    }\n  };\n\n  // Handle keyboard navigation\n  const handleKeyDown = (e) => {\n    if (!showSuggestions || suggestions.length === 0) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setSelectedIndex(prev => \n          prev < suggestions.length - 1 ? prev + 1 : prev\n        );\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setSelectedIndex(prev => prev > 0 ? prev - 1 : -1);\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (selectedIndex >= 0 && selectedIndex < suggestions.length) {\n          handleSuggestionSelect(suggestions[selectedIndex]);\n        }\n        break;\n      case 'Escape':\n        setShowSuggestions(false);\n        setSelectedIndex(-1);\n        break;\n      default:\n        // Do nothing for other keys\n        break;\n    }\n  };\n\n  // Handle click outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        suggestionsRef.current && \n        !suggestionsRef.current.contains(event.target) &&\n        inputRef.current &&\n        !inputRef.current.contains(event.target)\n      ) {\n        setShowSuggestions(false);\n        setSelectedIndex(-1);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Cleanup debounce on unmount\n  useEffect(() => {\n    return () => {\n      if (debounceRef.current) {\n        clearTimeout(debounceRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"relative\">\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={value}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        onFocus={() => setShowSuggestions(true)}\n        placeholder={placeholder}\n        className={`\n          w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\n          ${error ? 'border-red-500' : 'border-gray-300'}\n          ${className}\n        `}\n        autoComplete=\"off\"\n      />\n      \n      {/* Loading indicator */}\n      {isLoading && (\n        <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500\"></div>\n        </div>\n      )}\n\n      {/* Suggestions dropdown */}\n      {showSuggestions && suggestions.length > 0 && (\n        <div\n          ref={suggestionsRef}\n          className=\"absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-y-auto\"\n        >\n          {suggestions.map((product, index) => (\n            <div\n              key={product._id}\n              onClick={() => handleSuggestionSelect(product)}\n              className={`\n                px-3 py-2 cursor-pointer hover:bg-gray-100 flex items-center justify-between\n                ${index === selectedIndex ? 'bg-blue-50' : ''}\n              `}\n            >\n              <div className=\"flex-1\">\n                <div className=\"font-medium text-gray-900\">{product.name}</div>\n                {product.description && (\n                  <div className=\"text-sm text-gray-500\">{product.description}</div>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-xs text-gray-400 bg-gray-100 px-2 py-1 rounded\">\n                  {product.category}\n                </span>\n                <span className=\"text-xs text-blue-600\">\n                  {product.usageCount} kez kullanıldı\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Error message */}\n      {error && (\n        <p className=\"mt-1 text-sm text-red-600\">{error}</p>\n      )}\n    </div>\n  );\n};\n\nexport default AutoComplete;\n","import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Card, Button, Input, LoadingSpinner } from '../../components/UI';\nimport AutoComplete from '../../components/UI/AutoComplete';\nimport api from '../../services/api';\n\nconst CreateOrderPage = () => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  \n  const [formData, setFormData] = useState({\n    productName: '',\n    productCode: '',\n    priority: 'normal',\n    deliveryDate: '',\n    notes: ''\n  });\n  \n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n\n  const handleProductNameChange = (value) => {\n    setFormData(prev => ({\n      ...prev,\n      productName: value\n    }));\n    \n    // Clear error when user starts typing\n    if (errors.productName) {\n      setErrors(prev => ({\n        ...prev,\n        productName: ''\n      }));\n    }\n  };\n\n  const handleProductSelect = (product) => {\n    setSelectedProduct(product);\n    setFormData(prev => ({\n      ...prev,\n      productName: product.name\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!formData.productName.trim()) {\n      newErrors.productName = 'Ürün adı gereklidir';\n    }\n    \n    if (!formData.productCode.trim()) {\n      newErrors.productCode = 'Ürün kodu gereklidir';\n    }\n    \n    if (!formData.deliveryDate) {\n      newErrors.deliveryDate = 'Teslimat tarihi gereklidir';\n    } else {\n      const deliveryDate = new Date(formData.deliveryDate);\n      const today = new Date();\n      today.setHours(0, 0, 0, 0);\n      \n      if (deliveryDate <= today) {\n        newErrors.deliveryDate = 'Teslimat tarihi bugünden sonra olmalıdır';\n      }\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // First, ensure the product exists in the system\n      if (!selectedProduct && formData.productName.trim()) {\n        // Create or find the product\n        await api.post('/products', {\n          name: formData.productName.trim(),\n          description: formData.notes || '',\n          category: 'diğer'\n        });\n      }\n\n      const orderData = {\n        title: formData.productName,\n        description: formData.notes || `${formData.productCode} - ${formData.productName}`,\n        priority: formData.priority,\n        dueDate: formData.deliveryDate,\n        location: 'fabrika',\n        items: [{\n          productName: formData.productName,\n          quantity: 1,\n          unit: 'adet',\n          description: formData.notes || `${formData.productCode} - ${formData.productName}`,\n          urgency: formData.priority\n        }]\n      };\n      \n      const response = await api.post('/orders', orderData);\n      \n      if (response.data.success) {\n        console.log('Sipariş başarıyla oluşturuldu:', response.data.data.order);\n        \n        navigate('/orders', { \n          state: { \n            message: 'Sipariş başarıyla oluşturuldu!',\n            type: 'success'\n          }\n        });\n      } else {\n        throw new Error('API response error');\n      }\n    } catch (error) {\n      console.error('Sipariş oluşturma hatası:', error);\n      setErrors({ submit: 'Sipariş oluşturulurken bir hata oluştu. Lütfen tekrar deneyin.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-8\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Yeni Sipariş Oluştur</h1>\n          <p className=\"text-gray-600 mt-2\">Basit sipariş oluşturma formu</p>\n        </div>\n        <Link to=\"/orders\">\n          <Button variant=\"outline\">Geri Dön</Button>\n        </Link>\n      </div>\n\n      {/* Form */}\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        {/* Product Information */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Ürün Bilgileri</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Ürün Adı *\n              </label>\n              <AutoComplete\n                value={formData.productName}\n                onChange={handleProductNameChange}\n                onProductSelect={handleProductSelect}\n                placeholder=\"Ürün adını yazın (otomatik tamamlama)\"\n                error={errors.productName}\n              />\n              {selectedProduct && (\n                <div className=\"mt-2 text-sm text-green-600\">\n                  ✓ {selectedProduct.usageCount} kez kullanılan ürün seçildi\n                </div>\n              )}\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Ürün Kodu *\n              </label>\n              <Input\n                name=\"productCode\"\n                value={formData.productCode}\n                onChange={handleInputChange}\n                placeholder=\"Ürün kodunu girin\"\n                error={errors.productCode}\n              />\n            </div>\n          </div>\n        </Card>\n\n        {/* Order Details */}\n        <Card className=\"p-6\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Sipariş Detayları</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Öncelik\n              </label>\n              <select\n                name=\"priority\"\n                value={formData.priority}\n                onChange={handleInputChange}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"düşük\">Düşük</option>\n                <option value=\"normal\">Normal</option>\n                <option value=\"yüksek\">Yüksek</option>\n                <option value=\"acil\">Acil</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Teslimat Tarihi *\n              </label>\n              <Input\n                type=\"date\"\n                name=\"deliveryDate\"\n                value={formData.deliveryDate}\n                onChange={handleInputChange}\n                error={errors.deliveryDate}\n              />\n            </div>\n          </div>\n          <div className=\"mt-6\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Açıklama\n            </label>\n            <textarea\n              name=\"notes\"\n              value={formData.notes}\n              onChange={handleInputChange}\n              placeholder=\"Sipariş açıklaması (opsiyonel)\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              rows={3}\n            />\n          </div>\n        </Card>\n\n        {/* Error Message */}\n        {errors.submit && (\n          <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n            <p className=\"text-red-600\">{errors.submit}</p>\n          </div>\n        )}\n\n        {/* Form Actions */}\n        <div className=\"flex justify-end space-x-4\">\n          <Link to=\"/orders\">\n            <Button type=\"button\" variant=\"outline\">\n              İptal\n            </Button>\n          </Link>\n          <Button \n            type=\"submit\" \n            variant=\"primary\" \n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <LoadingSpinner size=\"sm\" className=\"mr-2\" />\n                Sipariş Oluşturuluyor...\n              </>\n            ) : (\n              'Sipariş Oluştur'\n            )}\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateOrderPage;"],"names":["_ref","value","onChange","placeholder","onProductSelect","className","error","suggestions","setSuggestions","useState","isLoading","setIsLoading","showSuggestions","setShowSuggestions","selectedIndex","setSelectedIndex","inputRef","useRef","suggestionsRef","debounceRef","handleSuggestionSelect","product","name","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","clearTimeout","_jsxs","children","_jsx","ref","type","e","newValue","setTimeout","async","query","length","response","api","get","concat","encodeURIComponent","data","success","products","console","searchProducts","onKeyDown","key","preventDefault","prev","onFocus","autoComplete","map","index","onClick","description","category","usageCount","_id","CreateOrderPage","navigate","useNavigate","loading","setLoading","errors","setErrors","formData","setFormData","productName","productCode","priority","deliveryDate","notes","selectedProduct","setSelectedProduct","handleInputChange","_objectSpread","Link","to","Button","variant","onSubmit","validateForm","newErrors","trim","Date","today","setHours","Object","keys","post","orderData","title","dueDate","location","items","quantity","unit","urgency","Error","log","order","state","message","submit","Card","AutoComplete","Input","rows","disabled","_Fragment","LoadingSpinner","size"],"sourceRoot":""}