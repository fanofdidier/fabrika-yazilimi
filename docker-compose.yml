version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: fabrika_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: fabrika_admin
      MONGO_INITDB_ROOT_PASSWORD: Fabrika2024!Güvenli
      MONGO_INITDB_DATABASE: fabrika
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-keyfile:/etc/mongodb-keyfile:ro
      - ./mongodb-encryption-key:/etc/mongodb-encryption/mongodb-keyfile:ro
    ports:
      - "127.0.0.1:27017:27017"
    command: mongod --auth --keyFile /etc/mongodb-keyfile --enableEncryption --encryptionKeyFile /etc/mongodb-encryption/mongodb-keyfile
    networks:
      - fabrika_network
    restart: unless-stopped

  # PostgreSQL Database (backup)
  postgres:
    image: postgres:15-alpine
    container_name: fabrika_postgres
    environment:
      POSTGRES_DB: fabrika_db
      POSTGRES_USER: fabrika_user
      POSTGRES_PASSWORD: fabrika_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - fabrika_network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: fabrika_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fabrika_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fabrika_backend
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://fabrika_user:Fabrika2024!Güvenli@mongodb:27017/fabrika
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      WHATSAPP_API_URL: https://api.whatsapp.com
      WHATSAPP_API_TOKEN: your-whatsapp-api-token
    ports:
      - "5001:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - fabrika_network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fabrika_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - fabrika_network
    restart: unless-stopped

  # Nginx Load Balancer (optional for production)
  nginx:
    image: nginx:alpine
    container_name: fabrika_nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - fabrika_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fabrika_network:
    driver: bridge